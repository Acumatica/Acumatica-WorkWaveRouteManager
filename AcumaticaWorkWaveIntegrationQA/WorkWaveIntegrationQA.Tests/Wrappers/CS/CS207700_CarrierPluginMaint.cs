//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Api;
using Controls.Alert;
using Controls.Button;
using Controls.CheckBox;
using Controls.Container;
using Controls.Container.Extentions;
using Controls.Editors.DateSelector;
using Controls.Editors.DropDown;
using Controls.Editors.Selector;
using Controls.FileColumnButton;
using Controls.Grid;
using Controls.Grid.Filter;
using Controls.Grid.Upload;
using Controls.GroupBox;
using Controls.Input;
using Controls.Input.PXNumberEdit;
using Controls.Input.PXTextEdit;
using Controls.Label;
using Controls.NoteColumnButton;
using Controls.PxControlCollection;
using Controls.ToolBarButton;
using Core;
using Core.ApiConnection;
using Core.Core.Browser;
using Core.Wait;
using System;


namespace WorkWaveIntegrationQA.Tests.Wrappers
{


    public class CS207700_CarrierPluginMaint : Wrapper
    {

        public Note NotePanel;

        public SmartPanel_AttachFile FilesUploadDialog;

        public PxToolBar ToolBar;

        protected c_plugin_form Plugin_form { get; } = new c_plugin_form("ctl00_phF_form", "Plugin_form");
        protected c_parameters_gridwizard Parameters_gridWizard { get; } = new c_parameters_gridwizard("ctl00_usrCaption_shareColumnsDlg_gridWizard", "Parameters_gridWizard");
        protected c_profilerinfoview_formprofiler ProfilerInfoView_formProfiler { get; } = new c_profilerinfoview_formprofiler("ctl00_usrCaption_pnlProfiler_formProfiler", "ProfilerInfoView_formProfiler");
        protected c_firstselect_formactions FirstSelect_FormActions { get; } = new c_firstselect_formactions("ctl00_usrCaption_CustomizationDialogs_PXSmartPanel1_FormActions", "FirstSelect_FormActions");
        protected c_comboboxvalues_gridcombos ComboBoxValues_gridCombos { get; } = new c_comboboxvalues_gridcombos("ctl00_usrCaption_CustomizationDialogs_ComboBoxValuesDictDialog_gridCombos", "ComboBoxValues_gridCombos");
        protected c_vieweleminfo_formeleminfo ViewElemInfo_FormElemInfo { get; } = new c_vieweleminfo_formeleminfo("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo", "ViewElemInfo_FormElemInfo");
        protected c_filterworkingproject_formnewproject FilterWorkingProject_FormNewProject { get; } = new c_filterworkingproject_formnewproject("ctl00_usrCaption_CustomizationDialogs_DlgNewProject_FormNewProject", "FilterWorkingProject_FormNewProject");
        protected c_filterworkingproject_formselectproject FilterWorkingProject_FormSelectProject { get; } = new c_filterworkingproject_formselectproject("ctl00_usrCaption_CustomizationDialogs_WizardSelectProject_FormSelectProject", "FilterWorkingProject_FormSelectProject");
        protected c_gridlist_gridgrid GridList_gridGrid { get; } = new c_gridlist_gridgrid("ctl00_usrCaption_shareColumnsDlg_gridWizard_p0_gridGrid", "GridList_gridGrid");
        protected c_userlist_usergrid UserList_userGrid { get; } = new c_userlist_usergrid("ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid", "UserList_userGrid");
        protected c_userlist_lv0 UserList_lv0 { get; } = new c_userlist_lv0("ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_lv0", "UserList_lv0");
        protected c_details_pxgridsettings Details_PXGridSettings { get; } = new c_details_pxgridsettings("ctl00_phG_tab_t0_PXGridSettings", "Details_PXGridSettings");
        protected c_details_lv0 Details_lv0 { get; } = new c_details_lv0("ctl00_phG_tab_t0_PXGridSettings_lv0", "Details_lv0");
        protected c_customeraccounts_pxgridaccounts CustomerAccounts_PXGridAccounts { get; } = new c_customeraccounts_pxgridaccounts("ctl00_phG_tab_t1_PXGridAccounts", "CustomerAccounts_PXGridAccounts");
        protected c_customeraccounts_lv0 CustomerAccounts_lv0 { get; } = new c_customeraccounts_lv0("ctl00_phG_tab_t1_PXGridAccounts_lv0", "CustomerAccounts_lv0");
        protected c_carrierterritories_cstcarrierterritories CarrierTerritories_cstCarrierTerritories { get; } = new c_carrierterritories_cstcarrierterritories("ctl00_phG_tab_t4_cstCarrierTerritories", "CarrierTerritories_cstCarrierTerritories");
        protected c_carrierterritories_lv0 CarrierTerritories_lv0 { get; } = new c_carrierterritories_lv0("ctl00_phG_tab_t4_cstCarrierTerritories_lv0", "CarrierTerritories_lv0");
        protected c_customfieldmappings_cstcustomfieldmapping CustomFieldMappings_cstCustomFieldMapping { get; } = new c_customfieldmappings_cstcustomfieldmapping("ctl00_phG_tab_t5_cstCustomFieldMapping", "CustomFieldMappings_cstCustomFieldMapping");
        protected c_customfieldmappings_lv0 CustomFieldMappings_lv0 { get; } = new c_customfieldmappings_lv0("ctl00_phG_tab_t5_cstCustomFieldMapping_lv0", "CustomFieldMappings_lv0");
        protected c_buypostageparamsview_buypostageformview1 BuyPostageParamsView_BuyPostageFormView1 { get; } = new c_buypostageparamsview_buypostageformview1("ctl00_phG_spBuyPostage_BuyPostageFormView1", "BuyPostageParamsView_BuyPostageFormView1");
        protected c_stampsaccountinforecord_gridstampsinfo StampsAccountInfoRecord_gridStampsInfo { get; } = new c_stampsaccountinforecord_gridstampsinfo("ctl00_phG_tab_t2_gridStampsInfo", "StampsAccountInfoRecord_gridStampsInfo");
        protected c_shipengineterritoriesmappings_gridterritoriesmapping ShipEngineTerritoriesMappings_gridTerritoriesMapping { get; } = new c_shipengineterritoriesmappings_gridterritoriesmapping("ctl00_phG_tab_t3_gridTerritoriesMapping", "ShipEngineTerritoriesMappings_gridTerritoriesMapping");
        protected c_shipengineterritoriesmappings_lv0 ShipEngineTerritoriesMappings_lv0 { get; } = new c_shipengineterritoriesmappings_lv0("ctl00_phG_tab_t3_gridTerritoriesMapping_lv0", "ShipEngineTerritoriesMappings_lv0");
        protected c_filterpreview_formpreview FilterPreview_FormPreview { get; } = new c_filterpreview_formpreview("ctl00_usrCaption_PanelDynamicForm_FormPreview", "FilterPreview_FormPreview");

        public CS207700_CarrierPluginMaint()
        {
            ScreenId = "CS207700";
            ScreenUrl = "/Pages/CS/CS207700.aspx";
            NotePanel = new Note("ctl00_usrCaption_tlbDataView");
            FilesUploadDialog = new SmartPanel_AttachFile("ctl00_usrCaption_tlbDataView");
            ToolBar = new PxToolBar(null);
        }

        public virtual CS207700_CarrierPluginMaint ReadOne(Gate gate, string CarrierPluginID)
        {
            new BiObject<CS207700_CarrierPluginMaint>(gate).ReadOne(this, CarrierPluginID);
            return this;
        }

        public virtual CS207700_CarrierPluginMaint ReadOne(string CarrierPluginID)
        {
            return this.ReadOne(ApiConnection.Source, CarrierPluginID);
        }

        public virtual void Note()
        {
            ToolBar.Note.Click();
        }

        public virtual void FilesMenuShow()
        {
            ToolBar.FilesMenuShow.Click();
        }

        public virtual void Custom()
        {
            ToolBar.Custom.Click();
        }

        public virtual void ActionSelectWorkingProject()
        {
            ToolBar.ActionSelectWorkingProject.Click();
        }

        public virtual void InspectElementCtrlAltClick()
        {
            ToolBar.InspectElementCtrlAltClick.Click();
        }

        public virtual void MenuEditProj()
        {
            ToolBar.MenuEditProj.Click();
        }

        public virtual void ManageCustomizations()
        {
            ToolBar.ManageCustomizations.Click();
        }

        public virtual void KeyBtnRefresh()
        {
            ToolBar.KeyBtnRefresh.Click();
        }

        public virtual void Help()
        {
            ToolBar.Help.Click();
        }

        public virtual void SyncTOC()
        {
            ToolBar.SyncTOC.Click();
        }

        public virtual void MenuOpener()
        {
            ToolBar.MenuOpener.Click();
        }

        public virtual void CancelClose()
        {
            ToolBar.CancelClose.Click();
        }

        public virtual void SaveClose()
        {
            ToolBar.SaveClose.Click();
        }

        public virtual void Save()
        {
            ToolBar.Save.Click();
        }

        public virtual void Cancel()
        {
            ToolBar.Cancel.Click();
        }

        public virtual void Insert()
        {
            ToolBar.Insert.Click();
        }

        public virtual void Delete()
        {
            ToolBar.Delete.Click();
        }

        public virtual void Archive()
        {
            ToolBar.Archive.Click();
        }

        public virtual void Extract()
        {
            ToolBar.Extract.Click();
        }

        public virtual void First()
        {
            ToolBar.First.Click();
        }

        public virtual void Previous()
        {
            ToolBar.Previous.Click();
        }

        public virtual void Next()
        {
            ToolBar.Next.Click();
        }

        public virtual void Last()
        {
            ToolBar.Last.Click();
        }

        public virtual void Test()
        {
            ToolBar.Test.Click();
        }

        public virtual void Test(bool status, string message = null)
        {
            ToolBar.Test.WaitActionOverride = () => Wait.WaitForLongOperationToComplete(status, message);
            ToolBar.Test.Click();
        }

        public virtual void LongRun()
        {
            ToolBar.LongRun.Click();
        }

        public virtual void LongrunCancel()
        {
            ToolBar.LongrunCancel.Click();
        }

        public virtual void LongrunTimer()
        {
            ToolBar.LongrunTimer.Click();
        }

        public class PxToolBar : PxControlCollection
        {

            public ToolBarButton Note { get; }
            public ToolBarButton FilesMenuShow { get; }
            public ToolBarButton Custom { get; }
            public ToolBarButton ActionSelectWorkingProject { get; }
            public ToolBarButton InspectElementCtrlAltClick { get; }
            public ToolBarButton MenuEditProj { get; }
            public ToolBarButton ManageCustomizations { get; }
            public ToolBarButton KeyBtnRefresh { get; }
            public ToolBarButton Help { get; }
            public ToolBarButton SyncTOC { get; }
            public ToolBarButton MenuOpener { get; }
            public ToolBarButton CancelClose { get; }
            public ToolBarButton SaveClose { get; }
            public ToolBarButton Save { get; }
            public ToolBarButton Cancel { get; }
            public ToolBarButton Insert { get; }
            public ToolBarButton Delete { get; }
            public ToolBarButton Archive { get; }
            public ToolBarButton Extract { get; }
            public ToolBarButton First { get; }
            public ToolBarButton Previous { get; }
            public ToolBarButton Next { get; }
            public ToolBarButton Last { get; }
            public ToolBarButton Test { get; }
            public ToolBarButton LongRun { get; }
            public ToolBarButton LongrunCancel { get; }
            public ToolBarButton LongrunTimer { get; }

            public PxToolBar(string locator)
            {
                Note = new ToolBarButton("css=#ctl00_usrCaption_tlbDataView div[data-cmd=\'NoteShow\']", "Add Note", locator, null);
                FilesMenuShow = new ToolBarButton("css=#ctl00_usrCaption_tlbDataView div[data-cmd=\'FilesMenuShow\']", "Files", locator, null);
                Custom = new ToolBarButton("css=#ctl00_usrCaption_CustomizationDialogs_PXToolBar1 div[data-cmd=\'Custom\']", "Customization", locator, null);
                ActionSelectWorkingProject = new ToolBarButton("css=div#ctl00_usrCaption_CustomizationDialogs_PXToolBar1_menuCustom li[data-cmd=\'" +
                        "ActionSelectWorkingProject\']", "Select Project...", locator, Custom);
                InspectElementCtrlAltClick = new ToolBarButton("css=div#ctl00_usrCaption_CustomizationDialogs_PXToolBar1_menuCustom li.menuItem d" +
                        "iv:textEqual(\"Inspect Element (Ctrl+Alt+Click)\")", "Inspect Element (Ctrl+Alt+Click)", locator, Custom);
                MenuEditProj = new ToolBarButton("css=div#ctl00_usrCaption_CustomizationDialogs_PXToolBar1_menuCustom li[data-cmd=\'" +
                        "menuEditProj\']", "Edit Project...", locator, Custom);
                ManageCustomizations = new ToolBarButton("css=div#ctl00_usrCaption_CustomizationDialogs_PXToolBar1_menuCustom li.menuItem d" +
                        "iv:textEqual(\"Manage Customizations...\")", "Manage Customizations...", locator, Custom);
                KeyBtnRefresh = new ToolBarButton("css=#ctl00_usrCaption_tlbTools div[data-cmd=\'keyBtnRefresh\']", "Click to refresh page.", locator, null);
                Help = new ToolBarButton("css=#ctl00_usrCaption_tlbTools div[data-cmd=\'help\']", "View Tools", locator, null);
                SyncTOC = new ToolBarButton("css=#ctl00_usrCaption_tlbPath div[data-cmd=\'syncTOC\']", "Sync Navigation Pane", locator, null);
                MenuOpener = new ToolBarButton("css=#ctl00_phDS_ds_ToolBar_MenuOpener", "Menu", locator, null);
                CancelClose = new ToolBarButton("css=#ctl00_phDS_ds_ToolBar_CancelClose", "Discard Changes and Close", locator, null);
                CancelClose.ConfirmAction = () => Alert.AlertToException("Any unsaved changes will be discarded.");
                SaveClose = new ToolBarButton("css=#ctl00_phDS_ds_ToolBar_SaveClose", "Save the current record and close the screen (Ctrl+Shift+S).", locator, null);
                Save = new ToolBarButton("css=#ctl00_phDS_ds_ToolBar_Save", "Save (Ctrl+S).", locator, null);
                Cancel = new ToolBarButton("css=#ctl00_phDS_ds_ToolBar_Cancel", "Cancel (Esc)", locator, null);
                Cancel.ConfirmAction = () => Alert.AlertToException("Any unsaved changes will be discarded.");
                Insert = new ToolBarButton("css=#ctl00_phDS_ds_ToolBar_Insert", "Add New Record (Ctrl+Ins)", locator, null);
                Delete = new ToolBarButton("css=#ctl00_phDS_ds_ToolBar_Delete", "Delete (Ctrl+Del).", locator, null);
                Delete.ConfirmAction = () => Alert.AlertToException("The current Carrier Plugin record will be deleted.");
                Archive = new ToolBarButton("css=#ctl00_phDS_ds_ToolBar_Archive", "Archive", locator, null);
                Extract = new ToolBarButton("css=#ctl00_phDS_ds_ToolBar_Extract", "Extract", locator, null);
                First = new ToolBarButton("css=#ctl00_phDS_ds_ToolBar_First", "Go to First Record", locator, null);
                Previous = new ToolBarButton("css=#ctl00_phDS_ds_ToolBar_Previous", "Go to Previous Record (PgUp)", locator, null);
                Next = new ToolBarButton("css=#ctl00_phDS_ds_ToolBar_Next", "Go to Next Record (PgDn)", locator, null);
                Last = new ToolBarButton("css=#ctl00_phDS_ds_ToolBar_Last", "Go to Last Record", locator, null);
                Test = new ToolBarButton("css=#ctl00_phDS_ds_ToolBar_Test,#ctl00_phDS_ds_ToolBar_Test_item", "Test connection", locator, MenuOpener);
                Test.WaitAction = Wait.WaitForLongOperationToComplete;
                LongRun = new ToolBarButton("css=qp-long-run", "Nothing in progress", locator, null);
                LongrunCancel = new ToolBarButton("css=#ctl00_phDS_ds_LongRun_cancel", "Cancel", locator, null);
                LongrunTimer = new ToolBarButton("css=#ctl00_phDS_ds_LongRun_timer", "Elapsed Time", locator, null);
            }
        }

        public class c_plugin_form : Container
        {

            public PxButtonCollection Buttons;

            public Selector CarrierPluginID { get; }
            public Label CarrierPluginIDLabel { get; }
            public PXTextEdit Description { get; }
            public Label DescriptionLabel { get; }
            public Selector PluginTypeName { get; }
            public Label PluginTypeNameLabel { get; }
            public Selector ReturnLabelNotification { get; }
            public Label ReturnLabelNotificationLabel { get; }
            public DropDown UnitType { get; }
            public Label UnitTypeLabel { get; }
            public Selector KilogramUOM { get; }
            public Label KilogramUOMLabel { get; }
            public Selector PoundUOM { get; }
            public Label PoundUOMLabel { get; }
            public Selector CentimeterUOM { get; }
            public Label CentimeterUOMLabel { get; }
            public Selector InchUOM { get; }
            public Label InchUOMLabel { get; }
            public Selector SiteID { get; }
            public Label SiteIDLabel { get; }

            public c_plugin_form(string locator, string name) :
                    base(locator, name)
            {
                CarrierPluginID = new Selector("ctl00_phF_form_edCarrierPluginID", "Carrier ID", locator, null);
                CarrierPluginIDLabel = new Label(CarrierPluginID);
                CarrierPluginID.DataField = "CarrierPluginID";
                Description = new PXTextEdit("ctl00_phF_form_edDescription", "Description", locator, null);
                DescriptionLabel = new Label(Description);
                Description.DataField = "Description";
                PluginTypeName = new Selector("ctl00_phF_form_edPluginTypeName", "Plug-In (Type)", locator, null);
                PluginTypeNameLabel = new Label(PluginTypeName);
                PluginTypeName.DataField = "PluginTypeName";
                ReturnLabelNotification = new Selector("ctl00_phF_form_edStampsReturnLabelNotification", "Email Template for Return Label", locator, null);
                ReturnLabelNotificationLabel = new Label(ReturnLabelNotification);
                ReturnLabelNotification.DataField = "ReturnLabelNotification";
                UnitType = new DropDown("ctl00_phF_form_edUnitType", "Carrier Units", locator, null);
                UnitTypeLabel = new Label(UnitType);
                UnitType.DataField = "UnitType";
                UnitType.Items.Add("S", "SI Units (Kilogram/Centimeter)");
                UnitType.Items.Add("U", "US Units (Pound/Inch)");
                KilogramUOM = new Selector("ctl00_phF_form_edKG", "Kilogram", locator, null);
                KilogramUOMLabel = new Label(KilogramUOM);
                KilogramUOM.DataField = "KilogramUOM";
                PoundUOM = new Selector("ctl00_phF_form_edPound", "Pound", locator, null);
                PoundUOMLabel = new Label(PoundUOM);
                PoundUOM.DataField = "PoundUOM";
                CentimeterUOM = new Selector("ctl00_phF_form_edCM", "Centimeter", locator, null);
                CentimeterUOMLabel = new Label(CentimeterUOM);
                CentimeterUOM.DataField = "CentimeterUOM";
                InchUOM = new Selector("ctl00_phF_form_edInch", "Inch", locator, null);
                InchUOMLabel = new Label(InchUOM);
                InchUOM.DataField = "InchUOM";
                SiteID = new Selector("ctl00_phF_form_edSiteID", "Warehouse", locator, null);
                SiteIDLabel = new Label(SiteID);
                SiteID.DataField = "SiteID";
                DataMemberName = "Plugin";
                Buttons = new PxButtonCollection();
            }

            public virtual void ReturnLabelNotificationEdit()
            {
                Buttons.ReturnLabelNotificationEdit.Click();
            }

            public class PxButtonCollection : PxControlCollection
            {

                public Button ReturnLabelNotificationEdit { get; }

                public PxButtonCollection()
                {
                    ReturnLabelNotificationEdit = new Button("css=div[id=\'ctl00_phF_form_edStampsReturnLabelNotification\'] div[class=\'editBtnCo" +
                            "nt\'] > div > div", "ReturnLabelNotificationEdit", "ctl00_phF_form");
                    ReturnLabelNotificationEdit.WaitAction = Wait.WaitForNewWindowToOpen;
                }
            }
        }

        public class c_parameters_gridwizard : Container
        {

            public PxButtonCollection Buttons;

            public CheckBox IsDefault { get; }
            public Label IsDefaultLabel { get; }
            public CheckBox Override { get; }
            public Label OverrideLabel { get; }
            public Selector RoleName { get; }
            public Label RoleNameLabel { get; }

            public c_parameters_gridwizard(string locator, string name) :
                    base(locator, name)
            {
                IsDefault = new CheckBox("ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_defaultCkbx", "Is Default", locator, null);
                IsDefaultLabel = new Label(IsDefault);
                IsDefault.DataField = "IsDefault";
                Override = new CheckBox("ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_overrideCkbx", "Override", locator, null);
                OverrideLabel = new Label(Override);
                Override.DataField = "Override";
                RoleName = new Selector("ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_edRole", "Role Name", locator, null);
                RoleNameLabel = new Label(RoleName);
                RoleName.DataField = "RoleName";
                DataMemberName = "Parameters";
                Buttons = new PxButtonCollection();
            }

            public virtual void Cancel()
            {
                Buttons.Cancel.Click();
            }

            public virtual void Prev()
            {
                Buttons.Prev.Click();
            }

            public virtual void Next()
            {
                Buttons.Next.Click();
            }

            public virtual void Finish()
            {
                Buttons.Finish.Click();
            }

            public class PxButtonCollection : PxControlCollection
            {

                public Button Cancel { get; }
                public Button Prev { get; }
                public Button Next { get; }
                public Button Finish { get; }

                public PxButtonCollection()
                {
                    Cancel = new Button("ctl00_usrCaption_shareColumnsDlg_gridWizard_cancel", "Cancel", "ctl00_usrCaption_shareColumnsDlg_gridWizard");
                    Prev = new Button("ctl00_usrCaption_shareColumnsDlg_gridWizard_prev", "Prev", "ctl00_usrCaption_shareColumnsDlg_gridWizard");
                    Next = new Button("ctl00_usrCaption_shareColumnsDlg_gridWizard_next", "Next", "ctl00_usrCaption_shareColumnsDlg_gridWizard");
                    Finish = new Button("ctl00_usrCaption_shareColumnsDlg_gridWizard_save", "Finish", "ctl00_usrCaption_shareColumnsDlg_gridWizard");
                }
            }
        }

        public class c_profilerinfoview_formprofiler : Container
        {

            public PxButtonCollection Buttons;

            public PXTextEdit StartText { get; }
            public Label StartTextLabel { get; }
            public PXTextEdit Started { get; }
            public Label StartedLabel { get; }
            public PXTextEdit RequestsLogged { get; }
            public Label RequestsLoggedLabel { get; }
            public Label LblPlace_ { get; }

            public c_profilerinfoview_formprofiler(string locator, string name) :
                    base(locator, name)
            {
                StartText = new PXTextEdit("ctl00_usrCaption_pnlProfiler_formProfiler_lblStartText", "Start Text", locator, null);
                StartTextLabel = new Label(StartText);
                StartText.DataField = "StartText";
                Started = new PXTextEdit("ctl00_usrCaption_pnlProfiler_formProfiler_lblStartedAt", "Started", locator, null);
                StartedLabel = new Label(Started);
                Started.DataField = "Started";
                RequestsLogged = new PXTextEdit("ctl00_usrCaption_pnlProfiler_formProfiler_lblRequestsLogged", "Requests Logged", locator, null);
                RequestsLoggedLabel = new Label(RequestsLogged);
                RequestsLogged.DataField = "RequestsLogged";
                LblPlace_ = new Label("ctl00_usrCaption_pnlProfiler_formProfiler_lblPlace", "Lbl Place _", locator, null);
                DataMemberName = "ProfilerInfoView";
                Buttons = new PxButtonCollection();
            }

            public virtual void BtnStartProfiler()
            {
                Buttons.BtnStartProfiler.Click();
            }

            public virtual void BtnStopProfiler()
            {
                Buttons.BtnStopProfiler.Click();
            }

            public virtual void BtnMainProfiler()
            {
                Buttons.BtnMainProfiler.Click();
            }

            public class PxButtonCollection : PxControlCollection
            {

                public Button BtnStartProfiler { get; }
                public Button BtnStopProfiler { get; }
                public Button BtnMainProfiler { get; }

                public PxButtonCollection()
                {
                    BtnStartProfiler = new Button("ctl00_usrCaption_pnlProfiler_formProfiler_btnStartProfiler", "btnStartProfiler", "ctl00_usrCaption_pnlProfiler_formProfiler");
                    BtnStopProfiler = new Button("ctl00_usrCaption_pnlProfiler_formProfiler_btnStopProfiler", "btnStopProfiler", "ctl00_usrCaption_pnlProfiler_formProfiler");
                    BtnMainProfiler = new Button("ctl00_usrCaption_pnlProfiler_formProfiler_btnMainProfiler", "btnMainProfiler", "ctl00_usrCaption_pnlProfiler_formProfiler");
                }
            }
        }

        public class c_firstselect_formactions : Container
        {

            public PXTextEdit Key { get; }
            public Label KeyLabel { get; }

            public c_firstselect_formactions(string locator, string name) :
                    base(locator, name)
            {
                Key = new PXTextEdit("ctl00_usrCaption_CustomizationDialogs_PXSmartPanel1_FormActions_edKey", "Key", locator, null);
                KeyLabel = new Label(Key);
                Key.DataField = "Key";
                DataMemberName = "FirstSelect";
            }
        }

        public class c_comboboxvalues_gridcombos : Grid<c_comboboxvalues_gridcombos.c_grid_row, c_comboboxvalues_gridcombos.c_grid_header>
        {

            public PxToolBar ToolBar;

            public PxButtonCollection Buttons;

            public c_grid_filter FilterForm { get; }

            public c_comboboxvalues_gridcombos(string locator, string name) :
                    base(locator, name)
            {
                ToolBar = new PxToolBar("ctl00_usrCaption_CustomizationDialogs_ComboBoxValuesDictDialog_gridCombos");
                DataMemberName = "ComboBoxValues";
                Buttons = new PxButtonCollection();
                FilterForm = new c_grid_filter("ctl00_usrCaption_CustomizationDialogs_ComboBoxValuesDictDialog_gridCombos_fe_gf", "FilterForm");
            }

            public virtual void Export()
            {
                ToolBar.Export.Click();
            }

            public virtual void PageFirst()
            {
                ToolBar.PageFirst.Click();
            }

            public virtual void PagePrev()
            {
                ToolBar.PagePrev.Click();
            }

            public virtual void PageNext()
            {
                ToolBar.PageNext.Click();
            }

            public virtual void PageLast()
            {
                ToolBar.PageLast.Click();
            }

            public virtual void Hi()
            {
                ToolBar.Hi.Click();
            }

            public virtual void Close()
            {
                Buttons.Close.Click();
            }

            public class PxToolBar : PxControlCollection
            {

                public ToolBarButtonGrid Export { get; }
                public ToolBarButtonGrid PageFirst { get; }
                public ToolBarButtonGrid PagePrev { get; }
                public ToolBarButtonGrid PageNext { get; }
                public ToolBarButtonGrid PageLast { get; }
                public ToolBarButtonGrid Hi { get; }

                public PxToolBar(string locator)
                {
                    Export = new ToolBarButtonGrid("css=#ctl00_usrCaption_CustomizationDialogs_ComboBoxValuesDictDialog_gridCombos_ab" +
                            "_tlb div[data-cmd=\'ExportExcel\']", "Export to Excel", locator, null);
                    PageFirst = new ToolBarButtonGrid("css=#ctl00_usrCaption_CustomizationDialogs_ComboBoxValuesDictDialog_gridCombos_ab" +
                            "_tlb div[data-cmd=\'PageFirst\']", "Go to First Page (Ctrl+PgUp)", locator, null);
                    PagePrev = new ToolBarButtonGrid("css=#ctl00_usrCaption_CustomizationDialogs_ComboBoxValuesDictDialog_gridCombos_ab" +
                            "_tlb div[data-cmd=\'PagePrev\']", "Go to Previous Page (PgUp)", locator, null);
                    PageNext = new ToolBarButtonGrid("css=#ctl00_usrCaption_CustomizationDialogs_ComboBoxValuesDictDialog_gridCombos_ab" +
                            "_tlb div[data-cmd=\'PageNext\']", "Go to Next Page (PgDn)", locator, null);
                    PageLast = new ToolBarButtonGrid("css=#ctl00_usrCaption_CustomizationDialogs_ComboBoxValuesDictDialog_gridCombos_ab" +
                            "_tlb div[data-cmd=\'PageLast\']", "Go to Last Page (Ctrl+PgDn)", locator, null);
                    Hi = new ToolBarButtonGrid("css=#ctl00_usrCaption_CustomizationDialogs_ComboBoxValuesDictDialog_gridCombos_ab" +
                            "_tlb div[data-cmd=\'hi\']", "Hi", locator, null);
                }
            }

            public class PxButtonCollection : PxControlCollection
            {

                public Button Close { get; }

                public PxButtonCollection()
                {
                    Close = new Button("ctl00_usrCaption_CustomizationDialogs_ComboBoxValuesDictDialog_PXButton5", "Close", "ctl00_usrCaption_CustomizationDialogs_ComboBoxValuesDictDialog_gridCombos");
                }
            }

            public class c_grid_row : GridRow
            {

                public PXTextEdit Value { get; }
                public PXTextEdit Description { get; }

                public c_grid_row(c_comboboxvalues_gridcombos grid) :
                        base(grid)
                {
                    Value = new PXTextEdit("ctl00_usrCaption_CustomizationDialogs_ComboBoxValuesDictDialog_gridCombos_ei", "Value", grid.Locator, "Value");
                    Value.DataField = "Value";
                    Description = new PXTextEdit("ctl00_usrCaption_CustomizationDialogs_ComboBoxValuesDictDialog_gridCombos_ei", "Description", grid.Locator, "Description");
                    Description.DataField = "Description";
                }
            }

            public class c_grid_header : GridHeader
            {

                public PXTextEditColumnFilter Value { get; }
                public PXTextEditColumnFilter Description { get; }

                public c_grid_header(c_comboboxvalues_gridcombos grid) :
                        base(grid)
                {
                    Value = new PXTextEditColumnFilter(grid.Row.Value);
                    Description = new PXTextEditColumnFilter(grid.Row.Description);
                }
            }
        }

        public class c_vieweleminfo_formeleminfo : Container
        {

            public PxButtonCollection Buttons;

            public PXTextEdit AspxControl { get; }
            public Label AspxControlLabel { get; }
            public GroupBox IsComboBox { get; }
            public Label IsComboBoxLabel { get; }
            public PXTextEdit CacheType { get; }
            public Label CacheTypeLabel { get; }
            public PXTextEdit FieldName { get; }
            public Label FieldNameLabel { get; }
            public PXTextEdit ViewName { get; }
            public Label ViewNameLabel { get; }
            public PXTextEdit GraphName { get; }
            public Label GraphNameLabel { get; }
            public PXTextEdit ActionName { get; }
            public Label ActionNameLabel { get; }

            public c_vieweleminfo_formeleminfo(string locator, string name) :
                    base(locator, name)
            {
                AspxControl = new PXTextEdit("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo_edAspxControl", "Control Type", locator, null);
                AspxControlLabel = new Label(AspxControl);
                AspxControl.DataField = "AspxControl";
                IsComboBox = new GroupBox("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo_panelPXBUtton1", "Is Combo Box", locator, null);
                IsComboBoxLabel = new Label(IsComboBox);
                IsComboBox.DataField = "IsComboBox";
                CacheType = new PXTextEdit("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo_CacheType", "Data Class", locator, null);
                CacheTypeLabel = new Label(CacheType);
                CacheType.DataField = "CacheType";
                FieldName = new PXTextEdit("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo_FieldName", "Data Field", locator, null);
                FieldNameLabel = new Label(FieldName);
                FieldName.DataField = "FieldName";
                ViewName = new PXTextEdit("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo_ViewName", "View Name", locator, null);
                ViewNameLabel = new Label(ViewName);
                ViewName.DataField = "ViewName";
                GraphName = new PXTextEdit("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo_GraphName", "Business Logic", locator, null);
                GraphNameLabel = new Label(GraphName);
                GraphName.DataField = "GraphName";
                ActionName = new PXTextEdit("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo_ActionName", "Action Name", locator, null);
                ActionNameLabel = new Label(ActionName);
                ActionName.DataField = "ActionName";
                DataMemberName = "ViewElemInfo";
                Buttons = new PxButtonCollection();
            }

            public virtual void Drop_downValues()
            {
                Buttons.Drop_downValues.Click();
            }

            public virtual void Customize()
            {
                Buttons.Customize.Click();
            }

            public virtual void Actions()
            {
                Buttons.Actions.Click();
            }

            public virtual void Cancel()
            {
                Buttons.Cancel.Click();
            }

            public class PxButtonCollection : PxControlCollection
            {

                public Button Drop_downValues { get; }
                public Button Customize { get; }
                public Button Actions { get; }
                public Button Cancel { get; }

                public PxButtonCollection()
                {
                    Drop_downValues = new Button("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo_panelPXBUtton1_P" +
                            "XButton1", "Drop-down Values", "ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo");
                    Customize = new Button("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_PXButton3", "Customize", "ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo");
                    Actions = new Button("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_ButtonGraphActions", "Actions", "ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo");
                    Cancel = new Button("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_PXButton4", "Cancel", "ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo");
                }
            }
        }

        public class c_filterworkingproject_formnewproject : Container
        {

            public PxButtonCollection Buttons;

            public PXTextEdit NewProject { get; }
            public Label NewProjectLabel { get; }

            public c_filterworkingproject_formnewproject(string locator, string name) :
                    base(locator, name)
            {
                NewProject = new PXTextEdit("ctl00_usrCaption_CustomizationDialogs_DlgNewProject_FormNewProject_edNewProject", "Project Name", locator, null);
                NewProjectLabel = new Label(NewProject);
                NewProject.DataField = "NewProject";
                DataMemberName = "FilterWorkingProject";
                Buttons = new PxButtonCollection();
            }

            public virtual void Ok()
            {
                Buttons.Ok.Click();
            }

            public virtual void Cancel()
            {
                Buttons.Cancel.Click();
            }

            public class PxButtonCollection : PxControlCollection
            {

                public Button Ok { get; }
                public Button Cancel { get; }

                public PxButtonCollection()
                {
                    Ok = new Button("ctl00_usrCaption_CustomizationDialogs_DlgNewProject_DlgNewProjectButtonOk", "OK", "ctl00_usrCaption_CustomizationDialogs_DlgNewProject_FormNewProject");
                    Cancel = new Button("ctl00_usrCaption_CustomizationDialogs_DlgNewProject_DlgNewProjectButtonCancel", "Cancel", "ctl00_usrCaption_CustomizationDialogs_DlgNewProject_FormNewProject");
                }
            }
        }

        public class c_filterworkingproject_formselectproject : Container
        {

            public PxButtonCollection Buttons;

            public Selector Name { get; }
            public Label NameLabel { get; }

            public c_filterworkingproject_formselectproject(string locator, string name) :
                    base(locator, name)
            {
                Name = new Selector("ctl00_usrCaption_CustomizationDialogs_WizardSelectProject_FormSelectProject_edWP", "Project Name", locator, null);
                NameLabel = new Label(Name);
                Name.DataField = "Name";
                DataMemberName = "FilterWorkingProject";
                Buttons = new PxButtonCollection();
            }

            public virtual void Ok()
            {
                Buttons.Ok.Click();
            }

            public virtual void Cancel()
            {
                Buttons.Cancel.Click();
            }

            public virtual void New()
            {
                Buttons.New.Click();
            }

            public class PxButtonCollection : PxControlCollection
            {

                public Button Ok { get; }
                public Button Cancel { get; }
                public Button New { get; }

                public PxButtonCollection()
                {
                    Ok = new Button("ctl00_usrCaption_CustomizationDialogs_WizardSelectProject_SelectProjectOk", "OK", "ctl00_usrCaption_CustomizationDialogs_WizardSelectProject_FormSelectProject");
                    Cancel = new Button("ctl00_usrCaption_CustomizationDialogs_WizardSelectProject_SelectProjectCancel", "Cancel", "ctl00_usrCaption_CustomizationDialogs_WizardSelectProject_FormSelectProject");
                    New = new Button("ctl00_usrCaption_CustomizationDialogs_WizardSelectProject_BtnNewProject", "New...", "ctl00_usrCaption_CustomizationDialogs_WizardSelectProject_FormSelectProject");
                }
            }
        }

        public class c_gridlist_gridgrid : Grid<c_gridlist_gridgrid.c_grid_row, c_gridlist_gridgrid.c_grid_header>
        {

            public PxToolBar ToolBar;

            public c_grid_filter FilterForm { get; }

            public c_gridlist_gridgrid(string locator, string name) :
                    base(locator, name)
            {
                ToolBar = new PxToolBar("ctl00_usrCaption_shareColumnsDlg_gridWizard_p0_gridGrid");
                DataMemberName = "GridList";
                FilterForm = new c_grid_filter("ctl00_usrCaption_shareColumnsDlg_gridWizard_p0_gridGrid_fe_gf", "FilterForm");
            }

            public virtual void PageFirst()
            {
                ToolBar.PageFirst.Click();
            }

            public virtual void PagePrev()
            {
                ToolBar.PagePrev.Click();
            }

            public virtual void PageNext()
            {
                ToolBar.PageNext.Click();
            }

            public virtual void PageLast()
            {
                ToolBar.PageLast.Click();
            }

            public virtual void Hi()
            {
                ToolBar.Hi.Click();
            }

            public class PxToolBar : PxControlCollection
            {

                public ToolBarButtonGrid PageFirst { get; }
                public ToolBarButtonGrid PagePrev { get; }
                public ToolBarButtonGrid PageNext { get; }
                public ToolBarButtonGrid PageLast { get; }
                public ToolBarButtonGrid Hi { get; }

                public PxToolBar(string locator)
                {
                    PageFirst = new ToolBarButtonGrid("css=#ctl00_usrCaption_shareColumnsDlg_gridWizard_p0_gridGrid_ab_tlb div[data-cmd=" +
                            "\'PageFirst\']", "Go to First Page (Ctrl+PgUp)", locator, null);
                    PagePrev = new ToolBarButtonGrid("css=#ctl00_usrCaption_shareColumnsDlg_gridWizard_p0_gridGrid_ab_tlb div[data-cmd=" +
                            "\'PagePrev\']", "Go to Previous Page (PgUp)", locator, null);
                    PageNext = new ToolBarButtonGrid("css=#ctl00_usrCaption_shareColumnsDlg_gridWizard_p0_gridGrid_ab_tlb div[data-cmd=" +
                            "\'PageNext\']", "Go to Next Page (PgDn)", locator, null);
                    PageLast = new ToolBarButtonGrid("css=#ctl00_usrCaption_shareColumnsDlg_gridWizard_p0_gridGrid_ab_tlb div[data-cmd=" +
                            "\'PageLast\']", "Go to Last Page (Ctrl+PgDn)", locator, null);
                    Hi = new ToolBarButtonGrid("css=#ctl00_usrCaption_shareColumnsDlg_gridWizard_p0_gridGrid_ab_tlb div[data-cmd=" +
                            "\'hi\']", "Hi", locator, null);
                }
            }

            public class c_grid_row : GridRow
            {

                public CheckBox Selected { get; }
                public PXTextEdit View { get; }
                public PXTextEdit Id { get; }

                public c_grid_row(c_gridlist_gridgrid grid) :
                        base(grid)
                {
                    Selected = new CheckBox("ctl00_usrCaption_shareColumnsDlg_gridWizard_p0_gridGrid_ef", "Included", grid.Locator, "Selected");
                    Selected.DataField = "Selected";
                    View = new PXTextEdit("ctl00_usrCaption_shareColumnsDlg_gridWizard_p0_gridGrid_ei", "Table ID", grid.Locator, "View");
                    View.DataField = "View";
                    Id = new PXTextEdit("ctl00_usrCaption_shareColumnsDlg_gridWizard_p0_gridGrid_ei", "Grid ID", grid.Locator, "Id");
                    Id.DataField = "Id";
                }
            }

            public class c_grid_header : GridHeader
            {

                public CheckBoxColumnFilter Selected { get; }
                public PXTextEditColumnFilter View { get; }
                public PXTextEditColumnFilter Id { get; }

                public c_grid_header(c_gridlist_gridgrid grid) :
                        base(grid)
                {
                    Selected = new CheckBoxColumnFilter(grid.Row.Selected);
                    View = new PXTextEditColumnFilter(grid.Row.View);
                    Id = new PXTextEditColumnFilter(grid.Row.Id);
                }
            }
        }

        public class c_userlist_usergrid : Grid<c_userlist_usergrid.c_grid_row, c_userlist_usergrid.c_grid_header>
        {

            public PxToolBar ToolBar;

            public c_grid_filter FilterForm { get; }

            public c_userlist_usergrid(string locator, string name) :
                    base(locator, name)
            {
                ToolBar = new PxToolBar("ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid");
                DataMemberName = "UserList";
                FilterForm = new c_grid_filter("ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_fe_gf", "FilterForm");
            }

            public virtual void Refresh()
            {
                ToolBar.Refresh.Click();
            }

            public virtual void New()
            {
                ToolBar.New.Click();
            }

            public virtual void Delete()
            {
                ToolBar.Delete.Click();
            }

            public virtual void Adjust()
            {
                ToolBar.Adjust.Click();
            }

            public virtual void Export()
            {
                ToolBar.Export.Click();
            }

            public virtual void Hi()
            {
                ToolBar.Hi.Click();
            }

            public virtual void PageFirst()
            {
                ToolBar.PageFirst.Click();
            }

            public virtual void PagePrev()
            {
                ToolBar.PagePrev.Click();
            }

            public virtual void PageNext()
            {
                ToolBar.PageNext.Click();
            }

            public virtual void PageLast()
            {
                ToolBar.PageLast.Click();
            }

            public virtual void Hi1()
            {
                ToolBar.Hi1.Click();
            }

            public class PxToolBar : PxControlCollection
            {

                public ToolBarButtonGrid Refresh { get; }
                public ToolBarButtonGrid New { get; }
                public ToolBarButtonGrid Delete { get; }
                public ToolBarButtonGrid Adjust { get; }
                public ToolBarButtonGrid Export { get; }
                public ToolBarButtonGrid Hi { get; }
                public ToolBarButtonGrid PageFirst { get; }
                public ToolBarButtonGrid PagePrev { get; }
                public ToolBarButtonGrid PageNext { get; }
                public ToolBarButtonGrid PageLast { get; }
                public ToolBarButtonGrid Hi1 { get; }

                public PxToolBar(string locator)
                {
                    Refresh = new ToolBarButtonGrid("css=#ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_at_tlb div[data-cmd=" +
                            "\'Refresh\']", "Refresh", locator, null);
                    New = new ToolBarButtonGrid("css=#ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_at_tlb div[data-cmd=" +
                            "\'AddNew\']", "Add Row", locator, null);
                    Delete = new ToolBarButtonGrid("css=#ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_at_tlb div[data-cmd=" +
                            "\'Delete\']", "Delete Row", locator, null);
                    Delete.ConfirmAction = () => Alert.AlertToException("The current {0} record will be deleted.");
                    Adjust = new ToolBarButtonGrid("css=#ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_at_tlb div[data-cmd=" +
                            "\'AdjustColumns\']", "Fit to Screen", locator, null);
                    Export = new ToolBarButtonGrid("css=#ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_at_tlb div[data-cmd=" +
                            "\'ExportExcel\']", "Export to Excel", locator, null);
                    Hi = new ToolBarButtonGrid("css=#ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_at_tlb div[data-cmd=" +
                            "\'hi\']", "Hi", locator, null);
                    PageFirst = new ToolBarButtonGrid("css=#ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_ab_tlb div[data-cmd=" +
                            "\'PageFirst\']", "Go to First Page (Ctrl+PgUp)", locator, null);
                    PagePrev = new ToolBarButtonGrid("css=#ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_ab_tlb div[data-cmd=" +
                            "\'PagePrev\']", "Go to Previous Page (PgUp)", locator, null);
                    PageNext = new ToolBarButtonGrid("css=#ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_ab_tlb div[data-cmd=" +
                            "\'PageNext\']", "Go to Next Page (PgDn)", locator, null);
                    PageLast = new ToolBarButtonGrid("css=#ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_ab_tlb div[data-cmd=" +
                            "\'PageLast\']", "Go to Last Page (Ctrl+PgDn)", locator, null);
                    Hi1 = new ToolBarButtonGrid("css=#ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_ab_tlb div[data-cmd=" +
                            "\'hi\']", "Hi", locator, null);
                }
            }

            public class c_grid_row : GridRow
            {

                public CheckBox Included { get; }
                public Selector Username { get; }
                public PXTextEdit DisplayName { get; }
                public PXTextEdit Email { get; }
                public PXTextEdit Guest { get; }
                public DropDown State { get; }

                public c_grid_row(c_userlist_usergrid grid) :
                        base(grid)
                {
                    Included = new CheckBox("ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_ef", "Included", grid.Locator, "Included");
                    Included.DataField = "Included";
                    Username = new Selector("_ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_lv0_es", "Login", grid.Locator, "Username");
                    Username.DataField = "Username";
                    DisplayName = new PXTextEdit("ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_ei", "Display Name", grid.Locator, "DisplayName");
                    DisplayName.DataField = "DisplayName";
                    Email = new PXTextEdit("ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_ei", "Email", grid.Locator, "Email");
                    Email.DataField = "Email";
                    Guest = new PXTextEdit("ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_ef", "Guest Account", grid.Locator, "Guest");
                    Guest.DataField = "Guest";
                    State = new DropDown("_ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_lv0_ec", "Status", grid.Locator, "State");
                    State.DataField = "State";
                    State.Items.Add("N", "Not Created");
                    State.Items.Add("O", "Online");
                    State.Items.Add("P", "Pending Activation");
                    State.Items.Add("D", "Disabled");
                    State.Items.Add("A", "Active");
                    State.Items.Add("L", "Temporarily Locked");
                }
            }

            public class c_grid_header : GridHeader
            {

                public CheckBoxColumnFilter Included { get; }
                public SelectorColumnFilter Username { get; }
                public PXTextEditColumnFilter DisplayName { get; }
                public PXTextEditColumnFilter Email { get; }
                public PXTextEditColumnFilter Guest { get; }
                public DropDownColumnFilter State { get; }

                public c_grid_header(c_userlist_usergrid grid) :
                        base(grid)
                {
                    Included = new CheckBoxColumnFilter(grid.Row.Included);
                    Username = new SelectorColumnFilter(grid.Row.Username);
                    DisplayName = new PXTextEditColumnFilter(grid.Row.DisplayName);
                    Email = new PXTextEditColumnFilter(grid.Row.Email);
                    Guest = new PXTextEditColumnFilter(grid.Row.Guest);
                    State = new DropDownColumnFilter(grid.Row.State);
                }
            }
        }

        public class c_userlist_lv0 : Container
        {

            public Selector Es { get; }
            public Label EsLabel { get; }
            public DropDown Ec { get; }

            public c_userlist_lv0(string locator, string name) :
                    base(locator, name)
            {
                Es = new Selector("ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_lv0_es", "Es", locator, null);
                EsLabel = new Label(Es);
                Ec = new DropDown("ctl00_usrCaption_shareColumnsDlg_gridWizard_p1_userGrid_lv0_ec", "Ec", locator, null);
                DataMemberName = "UserList";
            }
        }

        public class c_details_pxgridsettings : Grid<c_details_pxgridsettings.c_grid_row, c_details_pxgridsettings.c_grid_header>
        {

            public PxToolBar ToolBar;

            public c_details_pxgridsettings(string locator, string name) :
                    base(locator, name)
            {
                ToolBar = new PxToolBar("ctl00_phG_tab_t0_PXGridSettings");
                DataMemberName = "Details";
            }

            public virtual void Refresh()
            {
                ToolBar.Refresh.Click();
            }

            public virtual void New()
            {
                ToolBar.New.Click();
            }

            public virtual void Delete()
            {
                ToolBar.Delete.Click();
            }

            public virtual void Cert()
            {
                ToolBar.Cert.Click();
            }

            public virtual void Cert(bool status, string message = null)
            {
                ToolBar.Cert.WaitActionOverride = () => Wait.WaitForLongOperationToComplete(status, message);
                ToolBar.Cert.Click();
            }

            public virtual void Adjust()
            {
                ToolBar.Adjust.Click();
            }

            public virtual void Export()
            {
                ToolBar.Export.Click();
            }

            public virtual void Hi()
            {
                ToolBar.Hi.Click();
            }

            public virtual void PageFirst()
            {
                ToolBar.PageFirst.Click();
            }

            public virtual void PagePrev()
            {
                ToolBar.PagePrev.Click();
            }

            public virtual void PageNext()
            {
                ToolBar.PageNext.Click();
            }

            public virtual void PageLast()
            {
                ToolBar.PageLast.Click();
            }

            public virtual void Hi1()
            {
                ToolBar.Hi1.Click();
            }

            public class PxToolBar : PxControlCollection
            {

                public ToolBarButtonGrid Refresh { get; }
                public ToolBarButtonGrid New { get; }
                public ToolBarButtonGrid Delete { get; }
                public ToolBarButtonGrid Cert { get; }
                public ToolBarButtonGrid Adjust { get; }
                public ToolBarButtonGrid Export { get; }
                public ToolBarButtonGrid Hi { get; }
                public ToolBarButtonGrid PageFirst { get; }
                public ToolBarButtonGrid PagePrev { get; }
                public ToolBarButtonGrid PageNext { get; }
                public ToolBarButtonGrid PageLast { get; }
                public ToolBarButtonGrid Hi1 { get; }

                public PxToolBar(string locator)
                {
                    Refresh = new ToolBarButtonGrid("css=#ctl00_phG_tab_t0_PXGridSettings_at_tlb div[data-cmd=\'Refresh\']", "Refresh", locator, null);
                    New = new ToolBarButtonGrid("css=#ctl00_phG_tab_t0_PXGridSettings_at_tlb div[data-cmd=\'AddNew\']", "Add Row", locator, null);
                    Delete = new ToolBarButtonGrid("css=#ctl00_phG_tab_t0_PXGridSettings_at_tlb div[data-cmd=\'Delete\']", "Delete Row", locator, null);
                    Delete.ConfirmAction = () => Alert.AlertToException("The current {0} record will be deleted.");
                    Cert = new ToolBarButtonGrid("css=#ctl00_phG_tab_t0_PXGridSettings_at_tlb div[data-cmd=\'cert\']", "Prepare Certification Files", locator, null);
                    Cert.WaitAction = Wait.WaitForLongOperationToComplete;
                    Adjust = new ToolBarButtonGrid("css=#ctl00_phG_tab_t0_PXGridSettings_at_tlb div[data-cmd=\'AdjustColumns\']", "Fit to Screen", locator, null);
                    Export = new ToolBarButtonGrid("css=#ctl00_phG_tab_t0_PXGridSettings_at_tlb div[data-cmd=\'ExportExcel\']", "Export to Excel", locator, null);
                    Hi = new ToolBarButtonGrid("css=#ctl00_phG_tab_t0_PXGridSettings_at_tlb div[data-cmd=\'hi\']", "Hi", locator, null);
                    PageFirst = new ToolBarButtonGrid("css=#ctl00_phG_tab_t0_PXGridSettings_ab_tlb div[data-cmd=\'PageFirst\']", "Go to First Page (Ctrl+PgUp)", locator, null);
                    PagePrev = new ToolBarButtonGrid("css=#ctl00_phG_tab_t0_PXGridSettings_ab_tlb div[data-cmd=\'PagePrev\']", "Go to Previous Page (PgUp)", locator, null);
                    PageNext = new ToolBarButtonGrid("css=#ctl00_phG_tab_t0_PXGridSettings_ab_tlb div[data-cmd=\'PageNext\']", "Go to Next Page (PgDn)", locator, null);
                    PageLast = new ToolBarButtonGrid("css=#ctl00_phG_tab_t0_PXGridSettings_ab_tlb div[data-cmd=\'PageLast\']", "Go to Last Page (Ctrl+PgDn)", locator, null);
                    Hi1 = new ToolBarButtonGrid("css=#ctl00_phG_tab_t0_PXGridSettings_ab_tlb div[data-cmd=\'hi\']", "Hi", locator, null);
                }
            }

            public class c_grid_row : GridRow
            {

                public PXTextEdit DetailID { get; }
                public PXTextEdit Descr { get; }
                public PXTextEdit Value { get; }
                public PXTextEdit CarrierPluginID { get; }

                public c_grid_row(c_details_pxgridsettings grid) :
                        base(grid)
                {
                    DetailID = new PXTextEdit("_ctl00_phG_tab_t0_PXGridSettings_lv0_edDetailID", "ID", grid.Locator, "DetailID");
                    DetailID.DataField = "DetailID";
                    Descr = new PXTextEdit("_ctl00_phG_tab_t0_PXGridSettings_lv0_edDescr", "Description", grid.Locator, "Descr");
                    Descr.DataField = "Descr";
                    Value = new PXTextEdit("_ctl00_phG_tab_t0_PXGridSettings_lv0_edValue", "Value", grid.Locator, "Value");
                    Value.DataField = "Value";
                    CarrierPluginID = new PXTextEdit("ctl00_phG_tab_t0_PXGridSettings_ei", "CarrierPluginID", grid.Locator, "CarrierPluginID");
                    CarrierPluginID.DataField = "CarrierPluginID";
                }
            }

            public class c_grid_header : GridHeader
            {

                public PXTextEditColumnFilter DetailID { get; }
                public PXTextEditColumnFilter Descr { get; }
                public PXTextEditColumnFilter Value { get; }
                public PXTextEditColumnFilter CarrierPluginID { get; }

                public c_grid_header(c_details_pxgridsettings grid) :
                        base(grid)
                {
                    DetailID = new PXTextEditColumnFilter(grid.Row.DetailID);
                    Descr = new PXTextEditColumnFilter(grid.Row.Descr);
                    Value = new PXTextEditColumnFilter(grid.Row.Value);
                    CarrierPluginID = new PXTextEditColumnFilter(grid.Row.CarrierPluginID);
                }
            }
        }

        public class c_details_lv0 : Container
        {

            public PXTextEdit DetailID { get; }
            public Label DetailIDLabel { get; }
            public PXTextEdit Descr { get; }
            public Label DescrLabel { get; }
            public PXTextEdit Value { get; }
            public Label ValueLabel { get; }
            public DateSelector Ed { get; }
            public Label EdLabel { get; }
            public DropDown Ec { get; }
            public Selector Es { get; }
            public Label EsLabel { get; }
            public Selector Em { get; }
            public Label EmLabel { get; }

            public c_details_lv0(string locator, string name) :
                    base(locator, name)
            {
                DetailID = new PXTextEdit("ctl00_phG_tab_t0_PXGridSettings_lv0_edDetailID", "ID", locator, null);
                DetailIDLabel = new Label(DetailID);
                DetailID.DataField = "DetailID";
                Descr = new PXTextEdit("ctl00_phG_tab_t0_PXGridSettings_lv0_edDescr", "Description", locator, null);
                DescrLabel = new Label(Descr);
                Descr.DataField = "Descr";
                Value = new PXTextEdit("ctl00_phG_tab_t0_PXGridSettings_lv0_edValue", "Value", locator, null);
                ValueLabel = new Label(Value);
                Value.DataField = "Value";
                Ed = new DateSelector("ctl00_phG_tab_t0_PXGridSettings_lv0_ed", "Ed", locator, null);
                EdLabel = new Label(Ed);
                Ec = new DropDown("ctl00_phG_tab_t0_PXGridSettings_lv0_ec", "Ec", locator, null);
                Es = new Selector("ctl00_phG_tab_t0_PXGridSettings_lv0_es", "Es", locator, null);
                EsLabel = new Label(Es);
                Em = new Selector("ctl00_phG_tab_t0_PXGridSettings_lv0_em", "Em", locator, null);
                EmLabel = new Label(Em);
                DataMemberName = "Details";
            }
        }

        public class c_customeraccounts_pxgridaccounts : Grid<c_customeraccounts_pxgridaccounts.c_grid_row, c_customeraccounts_pxgridaccounts.c_grid_header>
        {

            public PxToolBar ToolBar;

            public c_customeraccounts_pxgridaccounts(string locator, string name) :
                    base(locator, name)
            {
                ToolBar = new PxToolBar("ctl00_phG_tab_t1_PXGridAccounts");
                DataMemberName = "CustomerAccounts";
            }

            public virtual void Refresh()
            {
                ToolBar.Refresh.Click();
            }

            public virtual void New()
            {
                ToolBar.New.Click();
            }

            public virtual void Delete()
            {
                ToolBar.Delete.Click();
            }

            public virtual void Adjust()
            {
                ToolBar.Adjust.Click();
            }

            public virtual void Export()
            {
                ToolBar.Export.Click();
            }

            public virtual void Hi()
            {
                ToolBar.Hi.Click();
            }

            public virtual void PageFirst()
            {
                ToolBar.PageFirst.Click();
            }

            public virtual void PagePrev()
            {
                ToolBar.PagePrev.Click();
            }

            public virtual void PageNext()
            {
                ToolBar.PageNext.Click();
            }

            public virtual void PageLast()
            {
                ToolBar.PageLast.Click();
            }

            public virtual void Hi1()
            {
                ToolBar.Hi1.Click();
            }

            public class PxToolBar : PxControlCollection
            {

                public ToolBarButtonGrid Refresh { get; }
                public ToolBarButtonGrid New { get; }
                public ToolBarButtonGrid Delete { get; }
                public ToolBarButtonGrid Adjust { get; }
                public ToolBarButtonGrid Export { get; }
                public ToolBarButtonGrid Hi { get; }
                public ToolBarButtonGrid PageFirst { get; }
                public ToolBarButtonGrid PagePrev { get; }
                public ToolBarButtonGrid PageNext { get; }
                public ToolBarButtonGrid PageLast { get; }
                public ToolBarButtonGrid Hi1 { get; }

                public PxToolBar(string locator)
                {
                    Refresh = new ToolBarButtonGrid("css=#ctl00_phG_tab_t1_PXGridAccounts_at_tlb div[data-cmd=\'Refresh\']", "Refresh", locator, null);
                    New = new ToolBarButtonGrid("css=#ctl00_phG_tab_t1_PXGridAccounts_at_tlb div[data-cmd=\'AddNew\']", "Add Row", locator, null);
                    Delete = new ToolBarButtonGrid("css=#ctl00_phG_tab_t1_PXGridAccounts_at_tlb div[data-cmd=\'Delete\']", "Delete Row", locator, null);
                    Delete.ConfirmAction = () => Alert.AlertToException("The current {0} record will be deleted.");
                    Adjust = new ToolBarButtonGrid("css=#ctl00_phG_tab_t1_PXGridAccounts_at_tlb div[data-cmd=\'AdjustColumns\']", "Fit to Screen", locator, null);
                    Export = new ToolBarButtonGrid("css=#ctl00_phG_tab_t1_PXGridAccounts_at_tlb div[data-cmd=\'ExportExcel\']", "Export to Excel", locator, null);
                    Hi = new ToolBarButtonGrid("css=#ctl00_phG_tab_t1_PXGridAccounts_at_tlb div[data-cmd=\'hi\']", "Hi", locator, null);
                    PageFirst = new ToolBarButtonGrid("css=#ctl00_phG_tab_t1_PXGridAccounts_ab_tlb div[data-cmd=\'PageFirst\']", "Go to First Page (Ctrl+PgUp)", locator, null);
                    PagePrev = new ToolBarButtonGrid("css=#ctl00_phG_tab_t1_PXGridAccounts_ab_tlb div[data-cmd=\'PagePrev\']", "Go to Previous Page (PgUp)", locator, null);
                    PageNext = new ToolBarButtonGrid("css=#ctl00_phG_tab_t1_PXGridAccounts_ab_tlb div[data-cmd=\'PageNext\']", "Go to Next Page (PgDn)", locator, null);
                    PageLast = new ToolBarButtonGrid("css=#ctl00_phG_tab_t1_PXGridAccounts_ab_tlb div[data-cmd=\'PageLast\']", "Go to Last Page (Ctrl+PgDn)", locator, null);
                    Hi1 = new ToolBarButtonGrid("css=#ctl00_phG_tab_t1_PXGridAccounts_ab_tlb div[data-cmd=\'hi\']", "Hi", locator, null);
                }
            }

            public class c_grid_row : GridRow
            {

                public CheckBox IsActive { get; }
                public Selector CustomerID { get; }
                public PXTextEdit CustomerID_description { get; }
                public Selector CustomerLocationID { get; }
                public PXTextEdit CarrierAccount { get; }
                public PXTextEdit PostalCode { get; }
                public DropDown CarrierBillingType { get; }
                public Selector CarrierPluginID { get; }
                public PXNumberEdit RecordID { get; }

                public c_grid_row(c_customeraccounts_pxgridaccounts grid) :
                        base(grid)
                {
                    IsActive = new CheckBox("_ctl00_phG_tab_t1_PXGridAccounts_lv0_chkIsActive", "Active", grid.Locator, "IsActive");
                    IsActive.DataField = "IsActive";
                    CustomerID = new Selector("_ctl00_phG_tab_t1_PXGridAccounts_lv0_edCustomerID", "Customer ID", grid.Locator, "CustomerID");
                    CustomerID.DataField = "CustomerID";
                    CustomerID_description = new PXTextEdit("ctl00_phG_tab_t1_PXGridAccounts_ei", "Customer Name", grid.Locator, "CustomerID_description");
                    CustomerID_description.DataField = "CustomerID_description";
                    CustomerLocationID = new Selector("_ctl00_phG_tab_t1_PXGridAccounts_lv0_edCustomerLocationID", "Location", grid.Locator, "CustomerLocationID");
                    CustomerLocationID.DataField = "CustomerLocationID";
                    CarrierAccount = new PXTextEdit("_ctl00_phG_tab_t1_PXGridAccounts_lv0_edCarrierAccount", "Carrier Account", grid.Locator, "CarrierAccount");
                    CarrierAccount.DataField = "CarrierAccount";
                    PostalCode = new PXTextEdit("_ctl00_phG_tab_t1_PXGridAccounts_lv0_edPostalCode", "Postal Code", grid.Locator, "PostalCode");
                    PostalCode.DataField = "PostalCode";
                    CarrierBillingType = new DropDown("_ctl00_phG_tab_t1_PXGridAccounts_lv0_ec", "Carrier Billing Type", grid.Locator, "CarrierBillingType");
                    CarrierBillingType.DataField = "CarrierBillingType";
                    CarrierBillingType.Items.Add("R", "Receiver");
                    CarrierBillingType.Items.Add("T", "Third Party");
                    CarrierPluginID = new Selector("_ctl00_phG_tab_t1_PXGridAccounts_lv0_es", "Carrier", grid.Locator, "CarrierPluginID");
                    CarrierPluginID.DataField = "CarrierPluginID";
                    RecordID = new PXNumberEdit("ctl00_phG_tab_t1_PXGridAccounts_en", "RecordID", grid.Locator, "RecordID");
                    RecordID.DataField = "RecordID";
                }
            }

            public class c_grid_header : GridHeader
            {

                public CheckBoxColumnFilter IsActive { get; }
                public SelectorColumnFilter CustomerID { get; }
                public PXTextEditColumnFilter CustomerID_description { get; }
                public SelectorColumnFilter CustomerLocationID { get; }
                public PXTextEditColumnFilter CarrierAccount { get; }
                public PXTextEditColumnFilter PostalCode { get; }
                public DropDownColumnFilter CarrierBillingType { get; }
                public SelectorColumnFilter CarrierPluginID { get; }
                public PXNumberEditColumnFilter RecordID { get; }

                public c_grid_header(c_customeraccounts_pxgridaccounts grid) :
                        base(grid)
                {
                    IsActive = new CheckBoxColumnFilter(grid.Row.IsActive);
                    CustomerID = new SelectorColumnFilter(grid.Row.CustomerID);
                    CustomerID_description = new PXTextEditColumnFilter(grid.Row.CustomerID_description);
                    CustomerLocationID = new SelectorColumnFilter(grid.Row.CustomerLocationID);
                    CarrierAccount = new PXTextEditColumnFilter(grid.Row.CarrierAccount);
                    PostalCode = new PXTextEditColumnFilter(grid.Row.PostalCode);
                    CarrierBillingType = new DropDownColumnFilter(grid.Row.CarrierBillingType);
                    CarrierPluginID = new SelectorColumnFilter(grid.Row.CarrierPluginID);
                    RecordID = new PXNumberEditColumnFilter(grid.Row.RecordID);
                }
            }
        }

        public class c_customeraccounts_lv0 : Container
        {

            public CheckBox IsActive { get; }
            public Label IsActiveLabel { get; }
            public PXTextEdit PostalCode { get; }
            public Label PostalCodeLabel { get; }
            public Selector CustomerID { get; }
            public Label CustomerIDLabel { get; }
            public Selector CustomerLocationID { get; }
            public Label CustomerLocationIDLabel { get; }
            public PXTextEdit CarrierAccount { get; }
            public Label CarrierAccountLabel { get; }
            public Selector Es { get; }
            public Label EsLabel { get; }
            public DropDown Ec { get; }

            public c_customeraccounts_lv0(string locator, string name) :
                    base(locator, name)
            {
                IsActive = new CheckBox("ctl00_phG_tab_t1_PXGridAccounts_lv0_chkIsActive", "Active", locator, null);
                IsActiveLabel = new Label(IsActive);
                IsActive.DataField = "IsActive";
                PostalCode = new PXTextEdit("ctl00_phG_tab_t1_PXGridAccounts_lv0_edPostalCode", "Postal Code", locator, null);
                PostalCodeLabel = new Label(PostalCode);
                PostalCode.DataField = "PostalCode";
                CustomerID = new Selector("ctl00_phG_tab_t1_PXGridAccounts_lv0_edCustomerID", "Customer ID", locator, null);
                CustomerIDLabel = new Label(CustomerID);
                CustomerID.DataField = "CustomerID";
                CustomerLocationID = new Selector("ctl00_phG_tab_t1_PXGridAccounts_lv0_edCustomerLocationID", "Location", locator, null);
                CustomerLocationIDLabel = new Label(CustomerLocationID);
                CustomerLocationID.DataField = "CustomerLocationID";
                CarrierAccount = new PXTextEdit("ctl00_phG_tab_t1_PXGridAccounts_lv0_edCarrierAccount", "Carrier Account", locator, null);
                CarrierAccountLabel = new Label(CarrierAccount);
                CarrierAccount.DataField = "CarrierAccount";
                Es = new Selector("ctl00_phG_tab_t1_PXGridAccounts_lv0_es", "Es", locator, null);
                EsLabel = new Label(Es);
                Ec = new DropDown("ctl00_phG_tab_t1_PXGridAccounts_lv0_ec", "Ec", locator, null);
                DataMemberName = "CustomerAccounts";
            }
        }

        public class c_carrierterritories_cstcarrierterritories : Grid<c_carrierterritories_cstcarrierterritories.c_grid_row, c_carrierterritories_cstcarrierterritories.c_grid_header>
        {

            public PxToolBar ToolBar;

            public c_grid_filter FilterForm { get; }
            public SmartPanel_AttachFile FilesUploadDialog { get; }
            public Note NotePanel { get; }

            public c_carrierterritories_cstcarrierterritories(string locator, string name) :
                    base(locator, name)
            {
                ToolBar = new PxToolBar("ctl00_phG_tab_t4_cstCarrierTerritories");
                DataMemberName = "CarrierTerritories";
                FilterForm = new c_grid_filter("ctl00_phG_tab_t4_cstCarrierTerritories_fe_gf", "FilterForm");
                FilesUploadDialog = new SmartPanel_AttachFile(locator);
                NotePanel = new Note(locator);
            }

            public virtual void Refresh()
            {
                ToolBar.Refresh.Click();
            }

            public virtual void New()
            {
                ToolBar.New.Click();
            }

            public virtual void Delete()
            {
                ToolBar.Delete.Click();
            }

            public virtual void UploadTerritories()
            {
                ToolBar.UploadTerritories.Click();
            }

            public virtual void UploadTerritories(bool status, string message = null)
            {
                ToolBar.UploadTerritories.WaitActionOverride = () => Wait.WaitForLongOperationToComplete(status, message);
                ToolBar.UploadTerritories.Click();
            }

            public virtual void Adjust()
            {
                ToolBar.Adjust.Click();
            }

            public virtual void Export()
            {
                ToolBar.Export.Click();
            }

            public virtual void Hi()
            {
                ToolBar.Hi.Click();
            }

            public virtual void PageFirst()
            {
                ToolBar.PageFirst.Click();
            }

            public virtual void PagePrev()
            {
                ToolBar.PagePrev.Click();
            }

            public virtual void PageNext()
            {
                ToolBar.PageNext.Click();
            }

            public virtual void PageLast()
            {
                ToolBar.PageLast.Click();
            }

            public virtual void Hi1()
            {
                ToolBar.Hi1.Click();
            }

            public class PxToolBar : PxControlCollection
            {

                public ToolBarButtonGrid Refresh { get; }
                public ToolBarButtonGrid New { get; }
                public ToolBarButtonGrid Delete { get; }
                public ToolBarButtonGrid UploadTerritories { get; }
                public ToolBarButtonGrid Adjust { get; }
                public ToolBarButtonGrid Export { get; }
                public ToolBarButtonGrid Hi { get; }
                public ToolBarButtonGrid PageFirst { get; }
                public ToolBarButtonGrid PagePrev { get; }
                public ToolBarButtonGrid PageNext { get; }
                public ToolBarButtonGrid PageLast { get; }
                public ToolBarButtonGrid Hi1 { get; }

                public PxToolBar(string locator)
                {
                    Refresh = new ToolBarButtonGrid("css=#ctl00_phG_tab_t4_cstCarrierTerritories_at_tlb div[data-cmd=\'Refresh\']", "Refresh", locator, null);
                    New = new ToolBarButtonGrid("css=#ctl00_phG_tab_t4_cstCarrierTerritories_at_tlb div[data-cmd=\'AddNew\']", "Add Row", locator, null);
                    Delete = new ToolBarButtonGrid("css=#ctl00_phG_tab_t4_cstCarrierTerritories_at_tlb div[data-cmd=\'Delete\']", "Delete Row", locator, null);
                    Delete.ConfirmAction = () => Alert.AlertToException("The current {0} record will be deleted.");
                    UploadTerritories = new ToolBarButtonGrid("css=#ctl00_phG_tab_t4_cstCarrierTerritories_at_tlb div[data-cmd=\'UploadTerritorie" +
                            "s\']", "Upload Territories", locator, null);
                    UploadTerritories.WaitAction = Wait.WaitForLongOperationToComplete;
                    Adjust = new ToolBarButtonGrid("css=#ctl00_phG_tab_t4_cstCarrierTerritories_at_tlb div[data-cmd=\'AdjustColumns\']", "Fit to Screen", locator, null);
                    Export = new ToolBarButtonGrid("css=#ctl00_phG_tab_t4_cstCarrierTerritories_at_tlb div[data-cmd=\'ExportExcel\']", "Export to Excel", locator, null);
                    Hi = new ToolBarButtonGrid("css=#ctl00_phG_tab_t4_cstCarrierTerritories_at_tlb div[data-cmd=\'hi\']", "Hi", locator, null);
                    PageFirst = new ToolBarButtonGrid("css=#ctl00_phG_tab_t4_cstCarrierTerritories_ab_tlb div[data-cmd=\'PageFirst\']", "Go to First Page (Ctrl+PgUp)", locator, null);
                    PagePrev = new ToolBarButtonGrid("css=#ctl00_phG_tab_t4_cstCarrierTerritories_ab_tlb div[data-cmd=\'PagePrev\']", "Go to Previous Page (PgUp)", locator, null);
                    PageNext = new ToolBarButtonGrid("css=#ctl00_phG_tab_t4_cstCarrierTerritories_ab_tlb div[data-cmd=\'PageNext\']", "Go to Next Page (PgDn)", locator, null);
                    PageLast = new ToolBarButtonGrid("css=#ctl00_phG_tab_t4_cstCarrierTerritories_ab_tlb div[data-cmd=\'PageLast\']", "Go to Last Page (Ctrl+PgDn)", locator, null);
                    Hi1 = new ToolBarButtonGrid("css=#ctl00_phG_tab_t4_cstCarrierTerritories_ab_tlb div[data-cmd=\'hi\']", "Hi", locator, null);
                }
            }

            public class c_grid_row : GridRow
            {

                public FileColumnButton Files { get; }
                public NoteColumnButton Notes { get; }
                public Selector WWCompanyID { get; }
                public Selector WWBranchID { get; }
                public Selector WWWarehouseID { get; }
                public Selector WWTerritoryID { get; }
                public CheckBox WWActive { get; }
                public PXTextEdit WWCarrierPluginID { get; }
                public PXNumberEdit WWCarrierLineNbr { get; }

                public c_grid_row(c_carrierterritories_cstcarrierterritories grid) :
                        base(grid)
                {
                    Files = new FileColumnButton(null, "Files", grid.Locator, "Files");
                    Notes = new NoteColumnButton(null, "Notes", grid.Locator, "Notes");
                    WWCompanyID = new Selector("_ctl00_phG_tab_t4_cstCarrierTerritories_lv0_es", "Company", grid.Locator, "WWCompanyID");
                    WWCompanyID.DataField = "WWCompanyID";
                    WWBranchID = new Selector("_ctl00_phG_tab_t4_cstCarrierTerritories_lv0_es", "Branch", grid.Locator, "WWBranchID");
                    WWBranchID.DataField = "WWBranchID";
                    WWWarehouseID = new Selector("_ctl00_phG_tab_t4_cstCarrierTerritories_lv0_es", "Warehouse", grid.Locator, "WWWarehouseID");
                    WWWarehouseID.DataField = "WWWarehouseID";
                    WWTerritoryID = new Selector("_ctl00_phG_tab_t4_cstCarrierTerritories_lv0_es", "Territory", grid.Locator, "WWTerritoryID");
                    WWTerritoryID.DataField = "WWTerritoryID";
                    WWActive = new CheckBox("ctl00_phG_tab_t4_cstCarrierTerritories_ef", "Active", grid.Locator, "WWActive");
                    WWActive.DataField = "WWActive";
                    WWCarrierPluginID = new PXTextEdit("ctl00_phG_tab_t4_cstCarrierTerritories_ei", "Carrier Plugin", grid.Locator, "WWCarrierPluginID");
                    WWCarrierPluginID.DataField = "WWCarrierPluginID";
                    WWCarrierLineNbr = new PXNumberEdit("ctl00_phG_tab_t4_cstCarrierTerritories_en", "Line Nbr", grid.Locator, "WWCarrierLineNbr");
                    WWCarrierLineNbr.DataField = "WWCarrierLineNbr";
                }
            }

            public class c_grid_header : GridHeader
            {

                public GridColumnHeader Files { get; }
                public GridColumnHeader Notes { get; }
                public SelectorColumnFilter WWCompanyID { get; }
                public SelectorColumnFilter WWBranchID { get; }
                public SelectorColumnFilter WWWarehouseID { get; }
                public SelectorColumnFilter WWTerritoryID { get; }
                public CheckBoxColumnFilter WWActive { get; }
                public PXTextEditColumnFilter WWCarrierPluginID { get; }
                public PXNumberEditColumnFilter WWCarrierLineNbr { get; }

                public c_grid_header(c_carrierterritories_cstcarrierterritories grid) :
                        base(grid)
                {
                    Files = new GridColumnHeader(grid.Row.Files);
                    Notes = new GridColumnHeader(grid.Row.Notes);
                    WWCompanyID = new SelectorColumnFilter(grid.Row.WWCompanyID);
                    WWBranchID = new SelectorColumnFilter(grid.Row.WWBranchID);
                    WWWarehouseID = new SelectorColumnFilter(grid.Row.WWWarehouseID);
                    WWTerritoryID = new SelectorColumnFilter(grid.Row.WWTerritoryID);
                    WWActive = new CheckBoxColumnFilter(grid.Row.WWActive);
                    WWCarrierPluginID = new PXTextEditColumnFilter(grid.Row.WWCarrierPluginID);
                    WWCarrierLineNbr = new PXNumberEditColumnFilter(grid.Row.WWCarrierLineNbr);
                }
            }
        }

        public class c_carrierterritories_lv0 : Container
        {

            public Selector Es { get; }
            public Label EsLabel { get; }

            public c_carrierterritories_lv0(string locator, string name) :
                    base(locator, name)
            {
                Es = new Selector("ctl00_phG_tab_t4_cstCarrierTerritories_lv0_es", "Es", locator, null);
                EsLabel = new Label(Es);
                DataMemberName = "CarrierTerritories";
            }
        }

        public class c_customfieldmappings_cstcustomfieldmapping : Grid<c_customfieldmappings_cstcustomfieldmapping.c_grid_row, c_customfieldmappings_cstcustomfieldmapping.c_grid_header>
        {

            public PxToolBar ToolBar;

            public c_grid_filter FilterForm { get; }
            public SmartPanel_AttachFile FilesUploadDialog { get; }
            public Note NotePanel { get; }

            public c_customfieldmappings_cstcustomfieldmapping(string locator, string name) :
                    base(locator, name)
            {
                ToolBar = new PxToolBar("ctl00_phG_tab_t5_cstCustomFieldMapping");
                DataMemberName = "CustomFieldMappings";
                FilterForm = new c_grid_filter("ctl00_phG_tab_t5_cstCustomFieldMapping_fe_gf", "FilterForm");
                FilesUploadDialog = new SmartPanel_AttachFile(locator);
                NotePanel = new Note(locator);
            }

            public virtual void Refresh()
            {
                ToolBar.Refresh.Click();
            }

            public virtual void New()
            {
                ToolBar.New.Click();
            }

            public virtual void Delete()
            {
                ToolBar.Delete.Click();
            }

            public virtual void Adjust()
            {
                ToolBar.Adjust.Click();
            }

            public virtual void Export()
            {
                ToolBar.Export.Click();
            }

            public virtual void Hi()
            {
                ToolBar.Hi.Click();
            }

            public virtual void PageFirst()
            {
                ToolBar.PageFirst.Click();
            }

            public virtual void PagePrev()
            {
                ToolBar.PagePrev.Click();
            }

            public virtual void PageNext()
            {
                ToolBar.PageNext.Click();
            }

            public virtual void PageLast()
            {
                ToolBar.PageLast.Click();
            }

            public virtual void Hi1()
            {
                ToolBar.Hi1.Click();
            }

            public class PxToolBar : PxControlCollection
            {

                public ToolBarButtonGrid Refresh { get; }
                public ToolBarButtonGrid New { get; }
                public ToolBarButtonGrid Delete { get; }
                public ToolBarButtonGrid Adjust { get; }
                public ToolBarButtonGrid Export { get; }
                public ToolBarButtonGrid Hi { get; }
                public ToolBarButtonGrid PageFirst { get; }
                public ToolBarButtonGrid PagePrev { get; }
                public ToolBarButtonGrid PageNext { get; }
                public ToolBarButtonGrid PageLast { get; }
                public ToolBarButtonGrid Hi1 { get; }

                public PxToolBar(string locator)
                {
                    Refresh = new ToolBarButtonGrid("css=#ctl00_phG_tab_t5_cstCustomFieldMapping_at_tlb div[data-cmd=\'Refresh\']", "Refresh", locator, null);
                    New = new ToolBarButtonGrid("css=#ctl00_phG_tab_t5_cstCustomFieldMapping_at_tlb div[data-cmd=\'AddNew\']", "Add Row", locator, null);
                    Delete = new ToolBarButtonGrid("css=#ctl00_phG_tab_t5_cstCustomFieldMapping_at_tlb div[data-cmd=\'Delete\']", "Delete Row", locator, null);
                    Delete.ConfirmAction = () => Alert.AlertToException("The current {0} record will be deleted.");
                    Adjust = new ToolBarButtonGrid("css=#ctl00_phG_tab_t5_cstCustomFieldMapping_at_tlb div[data-cmd=\'AdjustColumns\']", "Fit to Screen", locator, null);
                    Export = new ToolBarButtonGrid("css=#ctl00_phG_tab_t5_cstCustomFieldMapping_at_tlb div[data-cmd=\'ExportExcel\']", "Export to Excel", locator, null);
                    Hi = new ToolBarButtonGrid("css=#ctl00_phG_tab_t5_cstCustomFieldMapping_at_tlb div[data-cmd=\'hi\']", "Hi", locator, null);
                    PageFirst = new ToolBarButtonGrid("css=#ctl00_phG_tab_t5_cstCustomFieldMapping_ab_tlb div[data-cmd=\'PageFirst\']", "Go to First Page (Ctrl+PgUp)", locator, null);
                    PagePrev = new ToolBarButtonGrid("css=#ctl00_phG_tab_t5_cstCustomFieldMapping_ab_tlb div[data-cmd=\'PagePrev\']", "Go to Previous Page (PgUp)", locator, null);
                    PageNext = new ToolBarButtonGrid("css=#ctl00_phG_tab_t5_cstCustomFieldMapping_ab_tlb div[data-cmd=\'PageNext\']", "Go to Next Page (PgDn)", locator, null);
                    PageLast = new ToolBarButtonGrid("css=#ctl00_phG_tab_t5_cstCustomFieldMapping_ab_tlb div[data-cmd=\'PageLast\']", "Go to Last Page (Ctrl+PgDn)", locator, null);
                    Hi1 = new ToolBarButtonGrid("css=#ctl00_phG_tab_t5_cstCustomFieldMapping_ab_tlb div[data-cmd=\'hi\']", "Hi", locator, null);
                }
            }

            public class c_grid_row : GridRow
            {

                public FileColumnButton Files { get; }
                public NoteColumnButton Notes { get; }
                public Selector WWScreenAreaID { get; }
                public PXTextEdit WWViewName { get; }
                public PXTextEdit WWDACName { get; }
                public PXTextEdit WWFieldName { get; }
                public PXTextEdit WWCustomFieldName { get; }
                public CheckBox WWActive { get; }
                public PXNumberEdit WWCarrierLineNbr { get; }
                public PXTextEdit WWCarrierPluginID { get; }

                public c_grid_row(c_customfieldmappings_cstcustomfieldmapping grid) :
                        base(grid)
                {
                    Files = new FileColumnButton(null, "Files", grid.Locator, "Files");
                    Notes = new NoteColumnButton(null, "Notes", grid.Locator, "Notes");
                    WWScreenAreaID = new Selector("_ctl00_phG_tab_t5_cstCustomFieldMapping_lv0_es", "Screen Area Name", grid.Locator, "WWScreenAreaID");
                    WWScreenAreaID.DataField = "WWScreenAreaID";
                    WWViewName = new PXTextEdit("ctl00_phG_tab_t5_cstCustomFieldMapping_ei", "View Name", grid.Locator, "WWViewName");
                    WWViewName.DataField = "WWViewName";
                    WWDACName = new PXTextEdit("ctl00_phG_tab_t5_cstCustomFieldMapping_ei", "DAC Name", grid.Locator, "WWDACName");
                    WWDACName.DataField = "WWDACName";
                    WWFieldName = new PXTextEdit("ctl00_phG_tab_t5_cstCustomFieldMapping_ei", "Field Name", grid.Locator, "WWFieldName");
                    WWFieldName.DataField = "WWFieldName";
                    WWCustomFieldName = new PXTextEdit("ctl00_phG_tab_t5_cstCustomFieldMapping_ei", "Custom Field Name", grid.Locator, "WWCustomFieldName");
                    WWCustomFieldName.DataField = "WWCustomFieldName";
                    WWActive = new CheckBox("ctl00_phG_tab_t5_cstCustomFieldMapping_ef", "Active", grid.Locator, "WWActive");
                    WWActive.DataField = "WWActive";
                    WWCarrierLineNbr = new PXNumberEdit("ctl00_phG_tab_t5_cstCustomFieldMapping_en", "Line Nbr", grid.Locator, "WWCarrierLineNbr");
                    WWCarrierLineNbr.DataField = "WWCarrierLineNbr";
                    WWCarrierPluginID = new PXTextEdit("ctl00_phG_tab_t5_cstCustomFieldMapping_ei", "Carrier Plugin ID", grid.Locator, "WWCarrierPluginID");
                    WWCarrierPluginID.DataField = "WWCarrierPluginID";
                }
            }

            public class c_grid_header : GridHeader
            {

                public GridColumnHeader Files { get; }
                public GridColumnHeader Notes { get; }
                public SelectorColumnFilter WWScreenAreaID { get; }
                public PXTextEditColumnFilter WWViewName { get; }
                public PXTextEditColumnFilter WWDACName { get; }
                public PXTextEditColumnFilter WWFieldName { get; }
                public PXTextEditColumnFilter WWCustomFieldName { get; }
                public CheckBoxColumnFilter WWActive { get; }
                public PXNumberEditColumnFilter WWCarrierLineNbr { get; }
                public PXTextEditColumnFilter WWCarrierPluginID { get; }

                public c_grid_header(c_customfieldmappings_cstcustomfieldmapping grid) :
                        base(grid)
                {
                    Files = new GridColumnHeader(grid.Row.Files);
                    Notes = new GridColumnHeader(grid.Row.Notes);
                    WWScreenAreaID = new SelectorColumnFilter(grid.Row.WWScreenAreaID);
                    WWViewName = new PXTextEditColumnFilter(grid.Row.WWViewName);
                    WWDACName = new PXTextEditColumnFilter(grid.Row.WWDACName);
                    WWFieldName = new PXTextEditColumnFilter(grid.Row.WWFieldName);
                    WWCustomFieldName = new PXTextEditColumnFilter(grid.Row.WWCustomFieldName);
                    WWActive = new CheckBoxColumnFilter(grid.Row.WWActive);
                    WWCarrierLineNbr = new PXNumberEditColumnFilter(grid.Row.WWCarrierLineNbr);
                    WWCarrierPluginID = new PXTextEditColumnFilter(grid.Row.WWCarrierPluginID);
                }
            }
        }

        public class c_customfieldmappings_lv0 : Container
        {

            public Selector Es { get; }
            public Label EsLabel { get; }
            public DateSelector Ed { get; }
            public Label EdLabel { get; }
            public DropDown Ec { get; }
            public Selector Em { get; }
            public Label EmLabel { get; }

            public c_customfieldmappings_lv0(string locator, string name) :
                    base(locator, name)
            {
                Es = new Selector("ctl00_phG_tab_t5_cstCustomFieldMapping_lv0_es", "Es", locator, null);
                EsLabel = new Label(Es);
                Ed = new DateSelector("ctl00_phG_tab_t5_cstCustomFieldMapping_lv0_ed", "Ed", locator, null);
                EdLabel = new Label(Ed);
                Ec = new DropDown("ctl00_phG_tab_t5_cstCustomFieldMapping_lv0_ec", "Ec", locator, null);
                Em = new Selector("ctl00_phG_tab_t5_cstCustomFieldMapping_lv0_em", "Em", locator, null);
                EmLabel = new Label(Em);
                DataMemberName = "CustomFieldMappings";
            }
        }

        public class c_buypostageparamsview_buypostageformview1 : Container
        {

            public PxButtonCollection Buttons;

            public PXNumberEdit BuyPostageAmount { get; }
            public Label BuyPostageAmountLabel { get; }

            public c_buypostageparamsview_buypostageformview1(string locator, string name) :
                    base(locator, name)
            {
                BuyPostageAmount = new PXNumberEdit("ctl00_phG_spBuyPostage_BuyPostageFormView1_edBuyPostageAmount", "Buy Postage Amount", locator, null);
                BuyPostageAmountLabel = new Label(BuyPostageAmount);
                BuyPostageAmount.DataField = "BuyPostageAmount";
                DataMemberName = "BuyPostageParamsView";
                Buttons = new PxButtonCollection();
            }

            public virtual void Buy()
            {
                Buttons.Buy.Click();
            }

            public virtual void Cancel()
            {
                Buttons.Cancel.Click();
            }

            public class PxButtonCollection : PxControlCollection
            {

                public Button Buy { get; }
                public Button Cancel { get; }

                public PxButtonCollection()
                {
                    Buy = new Button("ctl00_phG_spBuyPostage_btnBuyOK", "Buy", "ctl00_phG_spBuyPostage_BuyPostageFormView1");
                    Cancel = new Button("ctl00_phG_spBuyPostage_btnBuyCancel", "Cancel", "ctl00_phG_spBuyPostage_BuyPostageFormView1");
                }
            }
        }

        public class c_stampsaccountinforecord_gridstampsinfo : Grid<c_stampsaccountinforecord_gridstampsinfo.c_grid_row, c_stampsaccountinforecord_gridstampsinfo.c_grid_header>
        {

            public PxToolBar ToolBar;

            public c_grid_filter FilterForm { get; }

            public c_stampsaccountinforecord_gridstampsinfo(string locator, string name) :
                    base(locator, name)
            {
                ToolBar = new PxToolBar("ctl00_phG_tab_t2_gridStampsInfo");
                DataMemberName = "StampsAccountInfoRecord";
                FilterForm = new c_grid_filter("ctl00_phG_tab_t2_gridStampsInfo_fe_gf", "FilterForm");
            }

            public virtual void Refresh()
            {
                ToolBar.Refresh.Click();
            }

            public virtual void BuyStampsPostage()
            {
                ToolBar.BuyStampsPostage.Click();
            }

            public virtual void GetStampsAccountInfo()
            {
                ToolBar.GetStampsAccountInfo.Click();
            }

            public virtual void Adjust()
            {
                ToolBar.Adjust.Click();
            }

            public virtual void Export()
            {
                ToolBar.Export.Click();
            }

            public virtual void Hi()
            {
                ToolBar.Hi.Click();
            }

            public virtual void PageFirst()
            {
                ToolBar.PageFirst.Click();
            }

            public virtual void PagePrev()
            {
                ToolBar.PagePrev.Click();
            }

            public virtual void PageNext()
            {
                ToolBar.PageNext.Click();
            }

            public virtual void PageLast()
            {
                ToolBar.PageLast.Click();
            }

            public virtual void Hi1()
            {
                ToolBar.Hi1.Click();
            }

            public class PxToolBar : PxControlCollection
            {

                public ToolBarButtonGrid Refresh { get; }
                public ToolBarButtonGrid BuyStampsPostage { get; }
                public ToolBarButtonGrid GetStampsAccountInfo { get; }
                public ToolBarButtonGrid Adjust { get; }
                public ToolBarButtonGrid Export { get; }
                public ToolBarButtonGrid Hi { get; }
                public ToolBarButtonGrid PageFirst { get; }
                public ToolBarButtonGrid PagePrev { get; }
                public ToolBarButtonGrid PageNext { get; }
                public ToolBarButtonGrid PageLast { get; }
                public ToolBarButtonGrid Hi1 { get; }

                public PxToolBar(string locator)
                {
                    Refresh = new ToolBarButtonGrid("css=#ctl00_phG_tab_t2_gridStampsInfo_at_tlb div[data-cmd=\'Refresh\']", "Refresh", locator, null);
                    BuyStampsPostage = new ToolBarButtonGrid("css=#ctl00_phG_tab_t2_gridStampsInfo_at_tlb div[data-cmd=\'BuyStampsPostage\']", "Buy Stamps.com Postage", locator, null);
                    GetStampsAccountInfo = new ToolBarButtonGrid("css=#ctl00_phG_tab_t2_gridStampsInfo_at_tlb div[data-cmd=\'GetStampsAccountInfo\']", "Get Account Info", locator, null);
                    Adjust = new ToolBarButtonGrid("css=#ctl00_phG_tab_t2_gridStampsInfo_at_tlb div[data-cmd=\'AdjustColumns\']", "Fit to Screen", locator, null);
                    Export = new ToolBarButtonGrid("css=#ctl00_phG_tab_t2_gridStampsInfo_at_tlb div[data-cmd=\'ExportExcel\']", "Export to Excel", locator, null);
                    Hi = new ToolBarButtonGrid("css=#ctl00_phG_tab_t2_gridStampsInfo_at_tlb div[data-cmd=\'hi\']", "Hi", locator, null);
                    PageFirst = new ToolBarButtonGrid("css=#ctl00_phG_tab_t2_gridStampsInfo_ab_tlb div[data-cmd=\'PageFirst\']", "Go to First Page (Ctrl+PgUp)", locator, null);
                    PagePrev = new ToolBarButtonGrid("css=#ctl00_phG_tab_t2_gridStampsInfo_ab_tlb div[data-cmd=\'PagePrev\']", "Go to Previous Page (PgUp)", locator, null);
                    PageNext = new ToolBarButtonGrid("css=#ctl00_phG_tab_t2_gridStampsInfo_ab_tlb div[data-cmd=\'PageNext\']", "Go to Next Page (PgDn)", locator, null);
                    PageLast = new ToolBarButtonGrid("css=#ctl00_phG_tab_t2_gridStampsInfo_ab_tlb div[data-cmd=\'PageLast\']", "Go to Last Page (Ctrl+PgDn)", locator, null);
                    Hi1 = new ToolBarButtonGrid("css=#ctl00_phG_tab_t2_gridStampsInfo_ab_tlb div[data-cmd=\'hi\']", "Hi", locator, null);
                }
            }

            public class c_grid_row : GridRow
            {

                public PXTextEdit AccountInfo { get; }
                public PXTextEdit AccountInfoValue { get; }
                public PXNumberEdit PropertyID { get; }

                public c_grid_row(c_stampsaccountinforecord_gridstampsinfo grid) :
                        base(grid)
                {
                    AccountInfo = new PXTextEdit("ctl00_phG_tab_t2_gridStampsInfo_ei", "Account Info", grid.Locator, "AccountInfo");
                    AccountInfo.DataField = "AccountInfo";
                    AccountInfoValue = new PXTextEdit("ctl00_phG_tab_t2_gridStampsInfo_ei", "Value", grid.Locator, "AccountInfoValue");
                    AccountInfoValue.DataField = "AccountInfoValue";
                    PropertyID = new PXNumberEdit("ctl00_phG_tab_t2_gridStampsInfo_en", "ID", grid.Locator, "PropertyID");
                    PropertyID.DataField = "PropertyID";
                }
            }

            public class c_grid_header : GridHeader
            {

                public PXTextEditColumnFilter AccountInfo { get; }
                public PXTextEditColumnFilter AccountInfoValue { get; }
                public PXNumberEditColumnFilter PropertyID { get; }

                public c_grid_header(c_stampsaccountinforecord_gridstampsinfo grid) :
                        base(grid)
                {
                    AccountInfo = new PXTextEditColumnFilter(grid.Row.AccountInfo);
                    AccountInfoValue = new PXTextEditColumnFilter(grid.Row.AccountInfoValue);
                    PropertyID = new PXNumberEditColumnFilter(grid.Row.PropertyID);
                }
            }
        }

        public class c_shipengineterritoriesmappings_gridterritoriesmapping : Grid<c_shipengineterritoriesmappings_gridterritoriesmapping.c_grid_row, c_shipengineterritoriesmappings_gridterritoriesmapping.c_grid_header>
        {

            public PxToolBar ToolBar;

            public c_grid_filter FilterForm { get; }

            public c_shipengineterritoriesmappings_gridterritoriesmapping(string locator, string name) :
                    base(locator, name)
            {
                ToolBar = new PxToolBar("ctl00_phG_tab_t3_gridTerritoriesMapping");
                DataMemberName = "ShipEngineTerritoriesMappings";
                FilterForm = new c_grid_filter("ctl00_phG_tab_t3_gridTerritoriesMapping_fe_gf", "FilterForm");
            }

            public virtual void Refresh()
            {
                ToolBar.Refresh.Click();
            }

            public virtual void New()
            {
                ToolBar.New.Click();
            }

            public virtual void Delete()
            {
                ToolBar.Delete.Click();
            }

            public virtual void Adjust()
            {
                ToolBar.Adjust.Click();
            }

            public virtual void Export()
            {
                ToolBar.Export.Click();
            }

            public virtual void Hi()
            {
                ToolBar.Hi.Click();
            }

            public virtual void PageFirst()
            {
                ToolBar.PageFirst.Click();
            }

            public virtual void PagePrev()
            {
                ToolBar.PagePrev.Click();
            }

            public virtual void PageNext()
            {
                ToolBar.PageNext.Click();
            }

            public virtual void PageLast()
            {
                ToolBar.PageLast.Click();
            }

            public virtual void Hi1()
            {
                ToolBar.Hi1.Click();
            }

            public class PxToolBar : PxControlCollection
            {

                public ToolBarButtonGrid Refresh { get; }
                public ToolBarButtonGrid New { get; }
                public ToolBarButtonGrid Delete { get; }
                public ToolBarButtonGrid Adjust { get; }
                public ToolBarButtonGrid Export { get; }
                public ToolBarButtonGrid Hi { get; }
                public ToolBarButtonGrid PageFirst { get; }
                public ToolBarButtonGrid PagePrev { get; }
                public ToolBarButtonGrid PageNext { get; }
                public ToolBarButtonGrid PageLast { get; }
                public ToolBarButtonGrid Hi1 { get; }

                public PxToolBar(string locator)
                {
                    Refresh = new ToolBarButtonGrid("css=#ctl00_phG_tab_t3_gridTerritoriesMapping_at_tlb div[data-cmd=\'Refresh\']", "Refresh", locator, null);
                    New = new ToolBarButtonGrid("css=#ctl00_phG_tab_t3_gridTerritoriesMapping_at_tlb div[data-cmd=\'AddNew\']", "Add Row", locator, null);
                    Delete = new ToolBarButtonGrid("css=#ctl00_phG_tab_t3_gridTerritoriesMapping_at_tlb div[data-cmd=\'Delete\']", "Delete Row", locator, null);
                    Delete.ConfirmAction = () => Alert.AlertToException("The current {0} record will be deleted.");
                    Adjust = new ToolBarButtonGrid("css=#ctl00_phG_tab_t3_gridTerritoriesMapping_at_tlb div[data-cmd=\'AdjustColumns\']" +
                            "", "Fit to Screen", locator, null);
                    Export = new ToolBarButtonGrid("css=#ctl00_phG_tab_t3_gridTerritoriesMapping_at_tlb div[data-cmd=\'ExportExcel\']", "Export to Excel", locator, null);
                    Hi = new ToolBarButtonGrid("css=#ctl00_phG_tab_t3_gridTerritoriesMapping_at_tlb div[data-cmd=\'hi\']", "Hi", locator, null);
                    PageFirst = new ToolBarButtonGrid("css=#ctl00_phG_tab_t3_gridTerritoriesMapping_ab_tlb div[data-cmd=\'PageFirst\']", "Go to First Page (Ctrl+PgUp)", locator, null);
                    PagePrev = new ToolBarButtonGrid("css=#ctl00_phG_tab_t3_gridTerritoriesMapping_ab_tlb div[data-cmd=\'PagePrev\']", "Go to Previous Page (PgUp)", locator, null);
                    PageNext = new ToolBarButtonGrid("css=#ctl00_phG_tab_t3_gridTerritoriesMapping_ab_tlb div[data-cmd=\'PageNext\']", "Go to Next Page (PgDn)", locator, null);
                    PageLast = new ToolBarButtonGrid("css=#ctl00_phG_tab_t3_gridTerritoriesMapping_ab_tlb div[data-cmd=\'PageLast\']", "Go to Last Page (Ctrl+PgDn)", locator, null);
                    Hi1 = new ToolBarButtonGrid("css=#ctl00_phG_tab_t3_gridTerritoriesMapping_ab_tlb div[data-cmd=\'hi\']", "Hi", locator, null);
                }
            }

            public class c_grid_row : GridRow
            {

                public Selector CountryID { get; }
                public Selector StateID { get; }
                public PXTextEdit StateName { get; }
                public PXTextEdit CountryName { get; }
                public Selector CarrierPluginID { get; }

                public c_grid_row(c_shipengineterritoriesmappings_gridterritoriesmapping grid) :
                        base(grid)
                {
                    CountryID = new Selector("_ctl00_phG_tab_t3_gridTerritoriesMapping_lv0_es", "Country", grid.Locator, "CountryID");
                    CountryID.DataField = "CountryID";
                    StateID = new Selector("_ctl00_phG_tab_t3_gridTerritoriesMapping_lv0_es", "State", grid.Locator, "StateID");
                    StateID.DataField = "StateID";
                    StateName = new PXTextEdit("ctl00_phG_tab_t3_gridTerritoriesMapping_ei", "State (For Carrier)", grid.Locator, "StateName");
                    StateName.DataField = "StateName";
                    CountryName = new PXTextEdit("ctl00_phG_tab_t3_gridTerritoriesMapping_ei", "Country (For Carrier)", grid.Locator, "CountryName");
                    CountryName.DataField = "CountryName";
                    CarrierPluginID = new Selector("_ctl00_phG_tab_t3_gridTerritoriesMapping_lv0_es", "CarrierPluginID", grid.Locator, "CarrierPluginID");
                    CarrierPluginID.DataField = "CarrierPluginID";
                }
            }

            public class c_grid_header : GridHeader
            {

                public SelectorColumnFilter CountryID { get; }
                public SelectorColumnFilter StateID { get; }
                public PXTextEditColumnFilter StateName { get; }
                public PXTextEditColumnFilter CountryName { get; }
                public SelectorColumnFilter CarrierPluginID { get; }

                public c_grid_header(c_shipengineterritoriesmappings_gridterritoriesmapping grid) :
                        base(grid)
                {
                    CountryID = new SelectorColumnFilter(grid.Row.CountryID);
                    StateID = new SelectorColumnFilter(grid.Row.StateID);
                    StateName = new PXTextEditColumnFilter(grid.Row.StateName);
                    CountryName = new PXTextEditColumnFilter(grid.Row.CountryName);
                    CarrierPluginID = new SelectorColumnFilter(grid.Row.CarrierPluginID);
                }
            }
        }

        public class c_shipengineterritoriesmappings_lv0 : Container
        {

            public Selector Es { get; }
            public Label EsLabel { get; }

            public c_shipengineterritoriesmappings_lv0(string locator, string name) :
                    base(locator, name)
            {
                Es = new Selector("ctl00_phG_tab_t3_gridTerritoriesMapping_lv0_es", "Es", locator, null);
                EsLabel = new Label(Es);
                DataMemberName = "ShipEngineTerritoriesMappings";
            }
        }

        public class c_filterpreview_formpreview : Container
        {

            public PxButtonCollection Buttons;

            public c_filterpreview_formpreview(string locator, string name) :
                    base(locator, name)
            {
                DataMemberName = "FilterPreview";
                Buttons = new PxButtonCollection();
            }

            public virtual void Ok()
            {
                Buttons.Ok.Click();
            }

            public virtual void Cancel()
            {
                Buttons.Cancel.Click();
            }

            public class PxButtonCollection : PxControlCollection
            {

                public Button Ok { get; }
                public Button Cancel { get; }

                public PxButtonCollection()
                {
                    Ok = new Button("ctl00_usrCaption_PanelDynamicForm_PXButtonOK", "OK", "ctl00_usrCaption_PanelDynamicForm_FormPreview");
                    Cancel = new Button("ctl00_usrCaption_PanelDynamicForm_PXButtonCancel", "Cancel", "ctl00_usrCaption_PanelDynamicForm_FormPreview");
                }
            }
        }
    }
}
